<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jdlink.mapper.UserMapper">
    <resultMap id="UserRM" type="User" autoMapping="true">
        <id property="id" column="id"/>
        <association property="role" column="roleId" select="getRole" javaType="com.jdlink.domain.Account.Role"/>
    </resultMap>
    <resultMap id="FunctionRM" type="Function" autoMapping="true">
        <id property="id" column="id"/>
        <result property="functionName" column="functionName"/>
        <collection property="children" column="id" select="getFunctionChildren" ofType="com.jdlink.domain.Account.Function" javaType="ArrayList"/>
    </resultMap>
    <insert id="add" parameterType="User" >
        INSERT INTO user (username, password, nowTime, name, age, sex, roleId)
        VALUES (#{username}, #{password}, NOW(), #{name}, #{age}, #{sex}, 2);
    </insert>

    <update id="setRole" parameterType="int">
        UPDATE user SET roleId=#{roleId} WHERE id=#{userId};
    </update>

    <delete id="delete" parameterType="User" >
        delete from user where id= #{id}
    </delete>

    <select id="get" parameterType="map" resultMap="UserRM">
        select * from user where username = #{username} and password = #{password}
    </select>

    <select id="getById" resultMap="UserRM">
        SELECT * FROM user WHERE id=#{id} LIMIT 1;
    </select>

    <select id="getByUsername" parameterType="String" resultMap="UserRM">
        SELECT * FROM user WHERE username=#{username};
    </select>

    <select id="getUserListByRoleId" resultMap="UserRM" parameterType="int">
        select * from user where roleId=#{roleId};
    </select>

    <update id="update" parameterType="User" >
        update user set username=#{username}, password=#{password}, name=#{name}, age=#{age}, sex=#{sex},email=#{email}, nowTime=NOW() where id=#{id}
    </update>
    <select id="list" resultMap="UserRM">
        select * from user order by nowTime desc;
    </select>

    <insert id="addLog" parameterType="LoginLog">
        INSERT INTO t_loginlog (userId, username, time, ip, nowTime,name) VALUES (#{userId}, #{username}, #{time}, #{ip}, NOW(),#{name});
    </insert>

    <select id="getLogById"  resultType="LoginLog">
        SELECT * FROM t_loginlog WHERE userId=#{id}
        order by time desc
        <if test="page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>

    <select id="getLog" resultType="LoginLog">
        SELECT * FROM t_loginlog
        order by time desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <select id="totalLogRecord" resultType="int">
        select count(*) from t_loginlog ;
    </select>

    <!--列出所有角色-->
    <select id="listRole" resultType="Role">
        SELECT * FROM t_ur_role;
    </select>

    <!--获取角色-->
    <select id="getRole" resultType="Role">
        SELECT * FROM t_ur_role WHERE id=#{roleId};
    </select>



    <!--增加角色-->
    <insert id="addRole" parameterType="Role">
        INSERT INTO t_ur_role (roleName) VALUES (#{roleName});
    </insert>

    <!--更新角色的名称-->
    <update id="setRoleName" parameterType="Role">
        UPDATE t_ur_role SET roleName=#{roleName} WHERE id=#{id};
    </update>

    <!--删除角色-->
    <delete id="deleteRoleById" parameterType="int" >
        delete from t_ur_role where id=#{id};
        <!--删除首页节点配置数据-->
        delete from t_ur_first_page_configuration_item where a_id in (select id from t_ur_first_page_configuration where role_id=#{id});
        delete from t_ur_first_page_configuration where role_id=#{id};
    </delete>

    <!--删除账号-->
    <delete id="deleteUserById" parameterType="int" >
        delete from user where id=#{id};
    </delete>

    <!--列出所有功能-->
    <select id="listFunction" resultMap="FunctionRM">
        SELECT * FROM t_ur_function WHERE parentFunctionId=0;
    </select>

    <!--列出子功能-->
    <select id="getFunctionChildren" resultMap="FunctionRM">
        SELECT * FROM t_ur_function WHERE parentFunctionId=#{id};
    </select>

    <!--通过角色编号获取功能-->
    <select id="getFunctionByRoleId" resultMap="FunctionRM" parameterType="int">
        SELECT * FROM t_ur_function WHERE id IN (
          SELECT t_ur_authority.functionId FROM t_ur_authority
          WHERE roleId=#{roleId}
        );
    </select>

    <!--列出所有的权限-->
    <select id="listAuthority" resultType="Authority">
        SELECT * FROM t_ur_authority;
    </select>

    <!--更新当前角色的权限-->
    <update id="updateAuthority">
        DELETE FROM t_ur_authority WHERE roleId=#{roleId};
        <if test="functionIdList.length > 0">
            <foreach collection="functionIdList" item="functionId" index="index">
                INSERT INTO t_ur_authority (roleId, functionId) VALUES (#{roleId}, #{functionId});
            </foreach>
        </if>
    </update>

    <!--校验当前角色是否可以进入该功能-->
    <select id="checkAuthority" resultType="boolean">
        SELECT COUNT(*) FROM t_ur_authority WHERE roleId=#{roleId} AND functionId=#{functionId};
    </select>

    <select id="searchLog" resultType="LoginLog">
        select * from t_loginlog
        <where>
            <if test="keywords != null and keywords != ''">
                or username like "%"#{keywords}"%"
                or name like "%"#{keywords}"%"
                or ip like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y-%m-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y-%c-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y-%c-%e') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y%m%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y%c%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y%c%e') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y.%m.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y.%c.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y.%c.%e') like "%"#{keywords}"%"
            </if>
            <if test="username != '' and username != null">
                and username like "%"#{username}"%"
            </if>
            <if test="name != null and name !=''">
                and name like "%"#{name}"%"
            </if>
            <if test="ip != null and ip !=''">
                and ip = #{ip}
            </if>
            <if test="startDate !=null and startDate !=''">
                <![CDATA[ and DATE_FORMAT(time, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="endDate !=null and endDate !=''">
                <![CDATA[ and DATE_FORMAT(time, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d') ]]>
            </if>
        </where>
        order by time desc
        <if test="page != null and page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>

    <select id="searchLogCount" resultType="int">
        select count(*) from t_loginlog
        <where>
            <if test="keywords != null and keywords != ''">
                or username like "%"#{keywords}"%"
                or name like "%"#{keywords}"%"
                or ip like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y-%m-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y-%c-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y-%c-%e') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y%m%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y%c%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y%c%e') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y.%m.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y.%c.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(time,'%Y.%c.%e') like "%"#{keywords}"%"
            </if>
            <if test="username != '' and username != null">
                and username like "%"#{username}"%"
            </if>
            <if test="name != null and name !=''">
                and name like "%"#{name}"%"
            </if>
            <if test="ip != null and ip !=''">
                and ip = #{ip}
            </if>
            <if test="startDate !=null and startDate !=''">
                <![CDATA[ and DATE_FORMAT(time, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="endDate !=null and endDate !=''">
                <![CDATA[ and DATE_FORMAT(time, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d') ]]>
            </if>
        </where>
    </select>

    <select id="countByUser" parameterType="User" resultType="int">
        select count(*) from user where username=#{username} and password=#{password} and company=#{company};
    </select>

    <update id="modifyPassword" parameterType="User">
        update user set password=#{password}
        where username=#{username} and company=#{company};
    </update>

    <!--获取公司邮箱-->
    <select id="getCompanyEmail" resultType="User">
        select * from t_company_email;
    </select>

    <!--更新公司邮箱-->
    <update id="updateCompanyEmail" >
        delete from t_company_email;
        insert into t_company_email (email, password) values (#{email},#{password});
    </update>

</mapper>