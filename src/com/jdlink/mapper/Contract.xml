<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jdlink.mapper.ContractMapper">

    <resultMap id="ContractRM" type="Contract">
        <id property="contractId" column="contractId"/>
        <result property="contractType" column="contractType" javaType="com.jdlink.domain.ContractType"/>
        <result property="checkState" column="checkState" javaType="com.jdlink.domain.CheckState"/>
        <result property="contractId" column="contractId" javaType="String"/>
        <result property="modelName" column="modelName" javaType="String"/>
        <result property="year" column="year" javaType="String"/>
        <result property="period" column="period" javaType="String"/>
        <result property="modelName" column="modelName" javaType="String"/>
        <result property="contractContent" column="contractContent" javaType="String"/>
        <result property="modelVersion" column="modelVersion" javaType="String"/>
        <result property="content" column="content" javaType="String"></result>
        <result property="supplier" column="supplier" javaType="String"/>
        <result property="nowTime" column="nowTime" javaType="String"></result>
        <result property="city" column="city" javaType="String"></result>
        <result property="opinion" column="opinion" javaType="String"></result>
        <result property="companyName " column="companyName " javaType="String"></result>
        <result property="province" column="province " javaType="com.jdlink.domain.Province"></result>
        <result property="contactName" column="contactName" javaType="String"></result>
        <result property="telephone " column="telephone " javaType="String"></result>
        <collection property="hazardousList" select="getHazardous" column="contractId"
                    ofType="com.jdlink.domain.Hazardous" javaType="ArrayList"/>
        <collection property="quotationItemList" select="getQuotationItem" column="contractId"
                    ofType="com.jdlink.domain.QuotationItem" javaType="ArrayList"/>
    </resultMap>
<!--通过报价单查询危废信息-->
    <select id="getQuotationItem" resultType="QuotationItem">
        select * from t_quotationitem where t_quotationitem.contractId=#{contractId};

    </select>
    <insert id="add" parameterType="Contract">
        insert into t_contract (contractId,contractType, companyName, clientId, contractVersion,
        checkState, beginTime, endTime, agreedQuantity,contactName,telephone,reviewer,reviewDepartment,
        reviewDate,isFreight,order1,province,city,bankName,bankAccount,ticketRate1,ticketRate2,logisticsQualification,beginQualification,endQualification,modelName,year,period,contractContent,contractName,modelVersion,nowTime,company1,content,suppierId)
        values (#{contractId},#{contractType}, #{companyName}, #{client.clientId}, #{contractVersion},
        #{checkState}, #{beginTime}, #{endTime}, #{agreedQuantity}, #{contactName}, #{telephone}, #{reviewer},
        #{reviewDepartment}, #{reviewDate},#{isFreight},#{order1},#{province},#{city},#{bankName},#{bankAccount},#{ticketRate1},#{ticketRate2},#{logisticsQualification},#{beginQualification},#{endQualification},#{modelName},#{year},#{period},#{contractContent},#{contractName},#{modelVersion},NOW(),#{company1},#{content},#{supplier.supplierId})
    </insert>
    <insert id="addEm" parameterType="Contract">
     insert into t_contract(contractId,contractType, companyName,checkState,telephone,bankName,bankAccount,area,companyLegal,companyAgent,clientLegal,clientAgent,address,thing,province,beginTime,nowTime,ticketRate1,contractVersion,city,endTime,modelName,company1,contactName,contractName)
     values (#{contractId},#{contractType},#{companyName},#{checkState},#{telephone},#{bankName},#{bankAccount},#{area},#{companyLegal},#{companyAgent},#{clientLegal},#{clientAgent},#{address},#{thing},#{province},#{beginTime},NOW(),#{ticketRate1},#{contractVersion},#{city},#{endTime},#{modelName},#{company1},#{contactName},#{contractName});
        <if test="hazardousList.size() > 0 ">
          <foreach collection="hazardousList"  item="hazardous" index="index">
              insert into r_contractandhazardous(contractId,hazardousId) values (#{contractId}, #{hazardous.id});
              insert into t_hazardous(id,name,num) values (#{hazardous.id}, #{hazardous.name}, #{hazardous.num});
          </foreach>
        </if>
</insert>

    <delete id="delete" parameterType="Contract" >
        delete from t_contract where contractId;
    </delete>

    <select id="getByKeyword"  resultType="Contract" parameterType="Contract">
        select * from t_contract where (contractId like  binary "%"#{0}"%" or checkState like binary "%"#{0}"%" or companyName like binary "%"#{0}"%"
        or city like binary "%"#{0}"%"  or province like binary  "%"#{0}"%" or contactName like binary "%"#{0}"%" or telephone like  binary  "%"#{0}"%" or beginTime like binary  "%"#{0}"%" or contractType like binary  "%"#{0}"%" )and contractType like  "%"#{1}"%";
    </select>
<select id="getContent" parameterType="String"  resultType="String">
    select content from t_contract where contractId=#{contractId};
</select>
    <select id="getByContractId" parameterType="String" resultMap="ContractRM">
        SELECT * FROM t_contract WHERE contractId = #{contractId};
    </select>
    <select id="getModel" parameterType="String" resultMap="ContractRM">
        select * from t_contract where contractId=#{contractId};
    </select>
    <select id="getModel2" parameterType="String" resultMap="ContractRM">
        select * from t_contract where modelName=#{modelName} and period!=""and year !="";
    </select>
    <update id="update" parameterType="Contract">
        UPDATE t_contract SET companyName=#{companyName}, clientId=#{clientId}, isCompanyContract=#{isCompanyContract},
        area=#{area}, beginTime=#{beginTime}, endTime=#{endTime}, agreedQuantity=#{agreedQuantity},
        contactName=#{contactName}, telephone=#{telephone}, reviewer=#{reviewer}, reviewDepartment=#{reviewDepartment},
        reviewDate=#{reviewDate},contractType=#{contractType},province=#{province},city=#{city},order1=#{order1},contractVersion=#{contractVersion},bankName=#{bankName},bankAccount=#{bankAccount},ticketRate1=#{ticketRate1},logisticsQualification=#{logisticsQualification},beginQualification=#{beginQualification},endQualification=#{endQualification},modelName=#{modelName},year=#{year},period=#{period},contractContent=#{contractContent},companyLegal=#{companyLegal},companyAgent=#{companyAgent},clientLegal=#{clientLegal},companyAgent=#{companyAgent},address=#{address},contractName=#{contractName},modelVersion=#{modelVersion},nowTime=NOW(),suppierName=#{suppierName},totalPrice=#{totalPrice},company1=#{company1},content=#{content}WHERE contractId=#{contractId};
    </update>
<update id="updateEm" parameterType="Contract">
UPDATE t_contract SET companyName=#{companyName},area=#{area},beginTime=#{beginTime},endTime=#{endTime},contactName=#{contactName},
telephone=#{telephone},contractType="Emergency",bankName=#{bankName},bankAccount=#{bankAccount},wasteName=#{wasteName},tonNumber=#{tonNumber},companyLegal=#{companyLegal},companyAgent=#{companyAgent},clientLegal=#{clientLegal},companyAgent=#{companyAgent},address=#{address},contractName=#{contractName}, nowTime=NOW() WHERE contractId=#{contractId};
</update>
    <update id="setCheckStateToExamine" parameterType="Contract">
        UPDATE t_contract SET checkState='ToExamine', nowTime=NOW() WHERE contractId=#{contractId};
    </update>

    <update id="setCheckStateKeeping" parameterType="Contract">
        UPDATE t_contract SET checkState='Keeping', nowTime=NOW() WHERE contractId=#{contractId};
    </update>
<update id="updateFreight1" parameterType="String">
    update t_contract  set  isFreight='1', nowTime=NOW() where contractId=#{id}
</update>
    <update id="updateFreight2" parameterType="String">
    update t_contract  set  isFreight='0', nowTime=NOW() where contractId=#{id}
</update>
    <update id="setCheckStateInvalid" parameterType="Contract">
        UPDATE t_contract SET checkState='Invalid', nowTime=NOW() WHERE contractId=#{contractId};
    </update>
    <update id="toSubmit"  parameterType="String">
        UPDATE t_contract SET checkState='ToExamine', nowTime=NOW() WHERE contractId=#{id} ;
    </update>
    <select id="list" resultMap="ContractRM">
        select * from t_contract order by year desc ;
    </select>
    <select id="list1" resultMap="ContractRM">
        select * from t_contract where contractType=#{name} and checkState!='Invalid'order by nowTime desc;
    </select>
    <select id="list2" resultMap="ContractRM">
        select * from t_contract where contractType=#{0} and checkState=#{1}order by nowTime desc;
    </select>
    <select id="getContractIdList" resultType="String">
        select contractId from t_contract;
    </select>
    <select id="listRate1">
        select rate1 from ticketrate1;
    </select>
    <select id="listRate2" >
        select rate2 from ticketrate2;
    </select>
    <update id="cancel" >
        update t_contract set checkState="Invalid",nowTime=#{1} where contractId=#{0}
    </update>
    <delete id="cancel1" parameterType="String">
        delete from  t_contract  where contractId=#{contractId}
    </delete>
    <update id="approval" parameterType="String">
        update t_contract set checkState="Keeping", nowTime=NOW() where contractId=#{contractId}
    </update>
    <select id="modelName" resultMap="ContractRM" >
        select distinct modelName from t_contract where modelName like CONCAT('%',#{key},'%') and period!="";
    </select>
    <update id="back" parameterType="Contract">
        update t_contract set checkState="Backed",backContent=#{1},nowTime=#{2} where contractId=#{0}
    </update>
<update id="opinion" parameterType="Contract">
    update t_contract set opinion=#{1},checkState="Keeping",nowTime=#{2} where contractId=#{0};
</update>
    <select id="getHazardous" resultType="Hazardous">
        SELECT * FROM t_hazardous WHERE id in (
          SELECT r_contractandhazardous.hazardousId FROM r_contractandhazardous
          WHERE contractId=#{contractId});
    </select>

    <select id="countTemplate" resultType="int">
        select count(*) from t_contract where modelName != '' and year != '';
    </select>

    <select id="countManage" resultType="int">
        select count(*) from t_contract
        <where>
            <if test="contractIndex == 0"><!--危废合同-->
                and contractType = 'Wastes'
            </if>
            <if test="contractIndex == 1"><!--应急合同-->
                and contractType = 'Emergency'
            </if>
            <if test="contractIndex == 2"><!--物流合同-->
                and contractType = 'Logistics'
            </if>
        </where>
    </select>

    <select id="listPageTemplate" resultMap="ContractRM">
        select * from t_contract where modelName != '' and year != ''
        order by nowTime desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <select id="listPageManege" resultMap="ContractRM">
        select * from t_contract
        <where>
            <if test="contractIndex == 0"><!--危废合同-->
                and contractType = 'Wastes'
            </if>
            <if test="contractIndex == 1"><!--应急合同-->
                and contractType = 'Emergency'
            </if>
            <if test="contractIndex == 2"><!--物流合同-->
                and contractType = 'Logistics'
            </if>
        </where>
        order by nowTime desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*) FROM t_contract;
    </select>

    <!--列出合同中的所有涉及到的业务员-->
    <select id="listSalesmanByContract" resultType="Salesman">
        SELECT * FROM salesman WHERE salesmanId IN (
          SELECT salesmanId FROM client WHERE clientId IN (
            SELECT DISTINCT clientId FROM t_contract WHERE clientId IS NOT NULL
          )
        )
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <!--列出合同中所有涉及到的业务员数量-->
    <select id="countSalesmanByContract" resultType="int">
        SELECT COUNT(*) FROM salesman WHERE salesmanId IN (
            SELECT salesmanId FROM client WHERE clientId IN (
            SELECT DISTINCT clientId FROM t_contract WHERE clientId IS NOT NULL
            )
        );
    </select>

    <select id="getContractList" resultMap="ContractRM">
        select * from t_contract where contractType='Wastes'
        order by beginTime asc;
    </select>

    <!--通过业务员编号读取对应的合同列表-->
    <select id="getContractBySalesman" parameterType="String" resultMap="ContractRM">
        SELECT * FROM t_contract WHERE clientId in (
          SELECT clientId FROM client WHERE salesmanId=#{salesmanId} and contractType='Wastes'
        )
        <if test="page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>
<!--高级查询-->
    <select id="search" parameterType="Contract" resultType="Contract">
         select * from t_contract
         <where>
             <if test="keyword != null and keyword != ''">
                 and contractId like "%"#{keyword}"%" or company1 like "%"#{keyword}"%" or
                 contractName like "%"#{keyword}"%" or telephone like "%"#{keyword}"%" or
                 suppierName like "%"#{keyword}"%" or modelName="%"#{keyword}"%"
             </if>
             <if test="contractId != null and contractId != ''">
                 and contractId LIKE "%"#{contractId}"%"
             </if>
             <if test="companyName != null and companyName != ''">
                 and company1 LIKE "%"#{companyName}"%"
             </if>
             <if test="contractName != null and contractName != ''">
                 and contractName LIKE "%"#{contractName}"%"
             </if>
             <if test="telephone != null and telephone != ''">
                 and telephone LIKE "%"#{telephone}"%"
             </if>
             <if test="suppierName != null and suppierName != ''">
                 and suppierName LIKE "%"#{suppierName}"%"
             </if>
             <if test="checkState != null and checkState != ''">
                 and checkState = #{checkState}
             </if>
             <if test="beginTime != null and beginTime != ''">
                 <![CDATA[  and DATE_FORMAT(t_contract.beginTime, '%Y-%m-%d %H:%T:%s') =
                        DATE_FORMAT(#{beginTime}, '%Y-%m-%d %H:%T:%s')   ]]>
             </if>
         </where>
        order by nowTime desc
        <if test="page != null and page.start != null and page.count != null">
            limit #{page.start}, #{page.count};
        </if>
    </select>
    <select id="searchModel" parameterType="Contract" resultType="Contract">
        select * from t_contract
        <where>
            <if test="keyword != null and keyword != ''">
                and modelName like "%"#{keyword}"%" or year like "%"#{keyword}"%"
            </if>
            <if test="modelName != null and modelName != ''">
                and modelName LIKE "%"#{modelName}"%"
            </if>
            <if test="year != null and year != ''">
                and year LIKE "%"#{year}"%"
            </if>
            <if test="checkState != null and checkState != ''">
                and checkState =#{checkState}
            </if>
            <if test="contractType != null and contractType != ''">
                and contractType =#{contractType}
            </if>
        </where>
        <if test="page != null and page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>

    <select id="getByClientId" parameterType="String" resultType="Client">
        select * from  client where clientId=#{clientId};
    </select>
    <!--查询最新的非模板合同编号-->
    <select id="getNewestContractId" resultType="String">
        select contractId from  t_contract where  content is null order by nowTime desc;
    </select>
    <!--添加合同中的报价单明细-->
    <insert id="addQuotationItem" parameterType="QuotationItem">
        insert into t_quotationitem(contractId,clientId,wastesCode,wastesName,packageType,util,unitPriceTax,contractAmount,totalPrice,transport,supplierId) values
         (#{contractId},#{client.clientId},#{wastesCode},#{wastesName},#{packageType},#{util},#{unitPriceTax},#{contractAmount},#{totalPrice},#{transport},#{supplier.supplierId});
    </insert>
    <!--根据供应商编号查询供应商-->
    <select id="getSupplierListById" parameterType="String" resultType="Supplier">
        select * from t_supplier where supplierId=#{supplierId};
    </select>
</mapper>