<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jdlink.mapper.ContractMapper">

    <resultMap id="ContractRM" type="Contract">
        <result property="contractType" column="contractType" javaType="com.jdlink.domain.ContractType"/>
        <result property="checkState" column="checkState" javaType="com.jdlink.domain.CheckState"/>
        <result property="contractId" column="contractId" javaType="String"/>
        <result property="modelName" column="modelName" javaType="String"/>
        <result property="year" column="year" javaType="String"/>
        <result property="period" column="period" javaType="String"/>
       <result property="modelName" column="modelName" javaType="String"/>
        <result property="contractContent" column="contractContent" javaType="String"/>
        <result property="modelVersion" column="modelVersion" javaType="String"/>
        <result property="city" column="city" javaType="String"></result>
        <result property="opinion" column="opinion" javaType="String"></result>
        <result property="companyName " column="companyName " javaType="String"></result>
            <result property="province" column="province " javaType="com.jdlink.domain.Province"></result>
     <result property="contactName" column="contactName" javaType="String"></result>
        <result property="telephone " column="telephone " javaType="String"></result>
        <collection property="hazardousList" select="getHazardous" column="contractId"
                    ofType="com.jdlink.domain.Hazardous" javaType="ArrayList"/>
    </resultMap>

    <insert id="add" parameterType="Contract"  >
        insert into t_contract (contractId,contractType, companyName, clientId, contractVersion,
        checkState, beginTime, endTime, agreedQuantity,contactName,telephone,reviewer,reviewDepartment,
        reviewDate,isFreight,order1,province,city,bankName,bankAccount,ticketRate1,ticketRate2,logisticsQualification,beginQualification,endQualification,modelName,year,period,contractContent,contractName,modelVersion)
        values (#{contractId},#{contractType}, #{companyName}, #{clientId}, #{contractVersion},
        #{checkState}, #{beginTime}, #{endTime}, #{agreedQuantity}, #{contactName}, #{telephone}, #{reviewer},
        #{reviewDepartment}, #{reviewDate},#{isFreight},#{order1},#{province},#{city},#{bankName},#{bankAccount},#{ticketRate1},#{ticketRate2},#{logisticsQualification},#{beginQualification},#{endQualification},#{modelName},#{year},#{period},#{contractContent},#{contractName},#{modelVersion})
    </insert>
    <insert id="addEm" parameterType="Contract">
     insert into t_contract(contractId,contractType, companyName,checkState,telephone,bankName,bankAccount,area,companyLegal,companyAgent,clientLegal,clientAgent,address,thing,province,beginTime)
     values (#{contractId},#{contractType},#{companyName},#{checkState},#{telephone},#{bankName},#{bankAccount},#{area},#{companyLegal},#{companyAgent},#{clientLegal},#{clientAgent},#{address},#{thing},#{province},#{beginTime});
        <if test="hazardousList.size() > 0 ">
          <foreach collection="hazardousList"  item="hazardous" index="index">
              insert into r_contractandhazardous(contractId,hazardousId) values (#{contractId}, #{hazardous.id});
              insert into t_hazardous(id,name,num) values (#{hazardous.id}, #{hazardous.name}, #{hazardous.num});
          </foreach>
        </if>
</insert>

    <delete id="delete" parameterType="Contract" >
        delete from t_contract where contractId;
    </delete>

    <select id="getByKeyword" parameterType="String" resultMap="ContractRM">
        select * from t_contract where contractId like  binary "%"#{keyword}"%" or checkState like binary "%"#{keyword}"%" or companyName like binary "%"#{keyword}"%"
        or city like binary "%"#{keyword}"%"  or province like binary  "%"#{keyword}"%" or contactName like binary "%"#{keyword}"%" or telephone like  binary  "%"#{keyword}"%" or beginTime like binary  "%"#{keyword}"%" or contractType like binary  "%"#{keyword}"%";
    </select>

    <select id="getByContractId" parameterType="String" resultMap="ContractRM">
        SELECT * FROM t_contract WHERE contractId = #{contractId};
    </select>
    <select id="getModel" parameterType="String" resultMap="ContractRM">
        select * from t_contract where contractId=#{contractId};
    </select>
    <select id="getModel2" parameterType="String" resultMap="ContractRM">
        select * from t_contract where modelName=#{modelName} and period!="";
    </select>
    <update id="update" parameterType="Contract">
        UPDATE t_contract SET companyName=#{companyName}, clientId=#{clientId}, isCompanyContract=#{isCompanyContract},
        area=#{area}, beginTime=#{beginTime}, endTime=#{endTime}, agreedQuantity=#{agreedQuantity},
        contactName=#{contactName}, telephone=#{telephone}, reviewer=#{reviewer}, reviewDepartment=#{reviewDepartment},
        reviewDate=#{reviewDate},contractType=#{contractType},province=#{province},city=#{city},order1=#{order1},contractVersion=#{contractVersion},bankName=#{bankName},bankAccount=#{bankAccount},ticketRate1=#{ticketRate1},ticketRate2=#{ticketRate2},logisticsQualification=#{logisticsQualification},beginQualification=#{beginQualification},endQualification=#{endQualification},modelName=#{modelName},year=#{year},period=#{period},contractContent=#{contractContent},companyLegal=#{companyLegal},companyAgent=#{companyAgent},clientLegal=#{clientLegal},companyAgent=#{companyAgent},address=#{address},contractName=#{contractName},modelVersion=#{modelVersion} WHERE contractId=#{contractId};
    </update>
<update id="updateEm" parameterType="Contract">
UPDATE t_contract SET companyName=#{companyName},area=#{area},beginTime=#{beginTime},endTime=#{endTime},contactName=#{contactName},
telephone=#{telephone},contractType="Emergency",bankName=#{bankName},bankAccount=#{bankAccount},wasteName=#{wasteName},tonNumber=#{tonNumber},companyLegal=#{companyLegal},companyAgent=#{companyAgent},clientLegal=#{clientLegal},companyAgent=#{companyAgent},address=#{address},contractName=#{contractName} WHERE contractId=#{contractId};
</update>
    <update id="setCheckStateToExamine" parameterType="Contract">
        UPDATE t_contract SET checkState='ToExamine' WHERE contractId=#{contractId};
    </update>

    <update id="setCheckStateKeeping" parameterType="Contract">
        UPDATE t_contract SET checkState='Keeping' WHERE contractId=#{contractId};
    </update>
<update id="updateFreight1" parameterType="String">
    update t_contract  set  isFreight='1' where contractId=#{id}
</update>
    <update id="updateFreight2" parameterType="String">
    update t_contract  set  isFreight='0' where contractId=#{id}
</update>
    <update id="setCheckStateInvalid" parameterType="Contract">
        UPDATE t_contract SET checkState='Invalid' WHERE contractId=#{contractId};
    </update>
    <update id="toSubmit" >
        UPDATE t_contract SET checkState='ToExamine' WHERE contractId=#{id};
    </update>
    <select id="list" resultMap="ContractRM">
        select * from t_contract order by year desc ;
    </select>
    <select id="list1" resultMap="ContractRM">
        select * from t_contract where contractType=#{name};
    </select>
    <select id="getContractIdList" resultType="String">
        select contractId from t_contract;
    </select>
    <select id="listRate1">
        select rate1 from ticketrate1;
    </select>
    <select id="listRate2" >
        select rate2 from ticketrate2;
    </select>
    <update id="cancel" parameterType="String">
        update t_contract set checkState="Invalid" where contractId=#{contractId}
    </update>
    <delete id="cancel1" parameterType="String">
        delete from  t_contract  where contractId=#{contractId}
    </delete>
    <update id="approval" parameterType="String">
        update t_contract set checkState="Keeping" where contractId=#{contractId}
    </update>
    <select id="modelName" resultMap="ContractRM" >
        select distinct modelName from t_contract where modelName like CONCAT('%',#{key},'%') ;
    </select>
    <update id="back" parameterType="Contract">
        update t_contract set checkState="Backed",backContent=#{1} where contractId=#{0}
    </update>
<update id="opinion" parameterType="Contract">
    update t_contract set opinion=#{1},checkState="Keeping" where contractId=#{0};
</update>
    <select id="getHazardous" resultType="Hazardous">
        SELECT * FROM t_hazardous WHERE id in (
          SELECT r_contractandhazardous.hazardousId FROM r_contractandhazardous
          WHERE contractId=#{contractId});
    </select>
</mapper>