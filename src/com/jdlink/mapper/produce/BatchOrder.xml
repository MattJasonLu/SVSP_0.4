<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdlink.mapper.produce.BatchOrderMapper">

    <!--添加配料单-->
<insert id="addBatchList">
    insert into t_pl_batchingorder(batchingDate,produceCompany,wastesName,wasteCategory,storage1,storage2,intelligent,storage1Batch,storage2Batch,intelligentBatch,allowance,handelCategory,batchingOrderId,inboundOrderDate,checkState) values
    (#{batchingDate},#{produceCompany.clientId},#{wastesName},#{wasteCategory},#{storage1},#{storage2},#{intelligent},#{storage1Batch},#{storage2Batch},#{intelligentBatch},#{allowance},#{handelCategory},#{batchingOrderId},#{inboundOrderDate},'ToPick')
</insert>
    
<resultMap id="BatchingOrderRM" type="BatchingOrder">
    <association property="produceCompany" column="produceCompany" select="getClient"></association>
    <association property="wareHouse" column="wareHouseId" select="getwareHouse"></association>
    <collection property="handleCategoryItem" column="handleCategoryId" select="getHandleCategoryItem"></collection>
    <collection property="processWayItem" column="processWayId" select="getProcessWayItem"></collection>
    <collection property="checkStateItem" column="checkStateId" select="getCheckStateItem"></collection>
</resultMap>

    <!--进料放式查询数据字典-->
<select id="getHandleCategoryItem" resultType="HandleCategoryItem">
    select * from datadictionaryitem where dataDictionaryItemId=#{handleCategoryId}
</select>

    <!--处置方式查询数据字典-->
    <select id="getProcessWayItem" resultType="ProcessWayItem">
    select * from datadictionaryitem where dataDictionaryItemId=#{processWayId}
</select>
    <!--获取客户信息-->
    <select id="getClient" resultType="Client">
        select * from client where clientId=#{produceCompany};
    </select>

    <!--获取配料单信息-->
    <select id="BatchList" resultMap="BatchingOrderRM">
        select * from t_pl_batchingorder where  round(batchingNumber,3)>0  order by checkStateId=69,batchingOrderId desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <!--根据配料单号获取配料信息-->
    <select id="getBatchById" resultMap="BatchingOrderRM">
    select * from t_pl_batchingorder where batchingOrderId=#{batchingOrderId};
</select>

    <resultMap id="WasteInventoryListBatRM" type="WasteInventory">
        <association property="produceCompany" column="clientId" select="getClientBat"></association>
     <association property="wareHouse" column="wareHouseId" select="getwareHouse"></association>
    <association property="handleCategoryItem" column="handleCategoryId"  select="getHandleCategoryItem"></association>
        <association property="processWayItem" column="processWayId"  select="getProcessWayItem"></association>
   <association property="secondaryCategoryItem" column="secondaryCategoryId" select="getSecondaryCategoryItem"></association>
        <association property="formTypeItem" column="formTypeId"  select="getFormTypeItem"></association>
        <association property="packageTypeItem" column="packageTypeId"  select="getPackageTypeItem"></association>
    </resultMap>

    <!--获取物质形态数据字典-->
    <select id="getFormTypeItem" resultType="FormTypeItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{formTypeId}
    </select>
    <!--获取包装方式数据字典-->
    <select id="getPackageTypeItem" resultType="PackageTypeItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{packageTypeId}
    </select>

    <!--获取次生危废名称数据字典-->
    <select id="getSecondaryCategoryItem" resultType="SecondaryCategoryItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{secondaryCategoryId}
    </select>
    <!--查找客户信息-->
    <select id="getClientBat" resultType="Client">
        select * from client where clientId=#{clientId};
    </select>

    <!--查找仓库信息-->
    <select id="getwareHouse" resultType="WareHouse">
        select * from t_pl_warehouse where wareHouseId=#{wareHouseId};
    </select>

    <!--配料单新增页面获取危废仓储信息-->
    <select id="getWasteInventoryListBat" resultMap="WasteInventoryListBatRM">
        select * from t_pl_wasteinventory where boundType='WasteInbound' and actualCount>0.00 order by inboundDate desc ;
    </select>

    <!--危废库存查询页面获取危废库存信息-->
    <select id="getWasteInventoryList" resultMap="WasteInventoryListBatRM">
    select * from t_pl_wasteinventory  where boundType='WasteInbound'and actualCount>0 order by  inboundDate desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <!--获得次生库存信息-->
    <select id="getSecInventoryListBat" resultMap="WasteInventoryListBatRM">
        select * from t_pl_wasteinventory where boundType='SecondaryInbound' order by inboundDate desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <!--次生新增页面,根据危废名称，仓库汇总-->
    <select id="getSecInventoryListAdd" resultMap="WasteInventoryListBatRM">
     select  wastesCode,secondaryCategoryId,wareHouseId,sum(actualCount) as actualCount,formTypeId,packageTypeId,processWayId ,unitId from t_pl_wasteinventory where boundType="SecondaryInbound"  group by wastesCode,secondaryCategoryId,wareHouseId,formTypeId,packageTypeId,processWayId ,unitId
    </select>

    <!--根据入库单号明细编号查询库存信息-->
    <select id="getWasteInventoryByInboundOrderId" resultMap="WasteInventoryListBatRM" parameterType="String">
        select * from t_pl_wasteinventory where  inboundOrderItemId=#{inboundOrderItemId};
    </select>

 <!--获得配料单单号列表-->
    <select id="getBatchingOrderIdList" resultType="String">
        select batchingOrderId from t_pl_batchingorder  order by (CAST(batchingOrderId AS SIGNED) ) desc ;
    </select>

    <!--添加配料单-->
    <insert id="addBatchingOrderBat" parameterType="BatchingOrder">
        insert into t_pl_batchingorder(batchingOrderId,batchingDate,batchingNumber,createDate,creator,handelCategory,inboundOrderId,inboundOrderItemId,produceCompany,wareHouseId,wasteCategory,wastesName,nowTime,transferDraftId,checkState,processWay,handleCategoryId,processWayId,checkStateId) values
        (#{batchingOrderId},#{batchingDate},#{batchingNumber},#{createDate},#{creator},#{handelCategory},#{inboundOrder.inboundOrderId},#{inboundOrderItemId},#{produceCompany.clientId},#{wareHouse.wareHouseId},#{wasteCategory},#{wastesName},NOW(),#{transferDraftId},'ToPick',#{processWay},#{handleCategoryItem.dataDictionaryItemId},#{processWayItem.dataDictionaryItemId},79)
    </insert>

    <!--配料成功后扣减库存-->
    <update id="deducNumber" >
        update t_pl_wasteinventory set actualCount=actualCount-#{1} where inboundOrderItemId=#{0};
    </update>

    <!--添加领料单-->
    <insert id="addRequisition" parameterType="MaterialRequisitionOrder">
        insert into t_pl_materialrequisitionorder (materialRequisitionId,wastesName,transferDraftId,wareHouseId,clientId,wasteCategory,recipientsNumber,inboundOrderItemId,nowTime,checkState,departmentName,deputyGeneral,warehouseManager,guardian,materialManager,picker,pickerDate,handelCategory,processWay,handleCategoryId,processWayId,checkStateId) values
        (#{materialRequisitionId},#{wastesName},#{transferDraftId},#{wareHouse.wareHouseId},#{client.clientId},#{wasteCategory},#{recipientsNumber},#{inboundOrderItemId},NOW(),'ToOutbound',#{departmentName},#{deputyGeneral},#{warehouseManager},#{guardian},#{materialManager},#{picker},#{pickerDate},#{handelCategory},#{processWay},#{handleCategoryItem.dataDictionaryItemId},#{processWayItem.dataDictionaryItemId},78);
    </insert>

    <!--领料成功后更新配料单的信息状态为已领料-->
    <update id="updateBatchOrderState" parameterType="String">
        update t_pl_batchingorder set checkState='Picked' ,nowTime=NOW() where batchingOrderId=#{batchingOrderId};

    </update>

    <resultMap id="MaterialRequisitionListRM" type="MaterialRequisitionOrder">
        <association property="client" column="clientId" select="getClientMar"></association>
        <association property="wareHouse" column="wareHouseId" select="getwareHouse"></association>
       <collection property="handleCategoryItem" column="handleCategoryId" select="getHandleCategoryItem"></collection>
        <collection property="processWayItem" column="processWayId" select="getProcessWayItem"></collection>
    </resultMap>

    <!--获得客户信息-->
    <select id="getClientMar" resultMap="ClientRM">
        select * from client where clientId=#{clientId};
    </select>

    <resultMap id="ClientRM" type="Client">
        <association property="salesman" column="salesmanId" select="getSalesman"></association>
    </resultMap>

    <select id="getSalesman" resultType="Salesman" parameterType="String">
        select * from salesman where salesmanId=#{salesmanId}
    </select>

    <!--查询领料单 新增页面-->
    <select id="getMaterialRequisitionList" resultMap="MaterialRequisitionListRM">
        select * from  t_pl_materialrequisitionorder where checkState='Picked'
    </select>

    <!--更新领料单数据-->
    <update id="updateMaterialRequisitionOrder" parameterType="MaterialRequisitionOrder">
        update t_pl_materialrequisitionorder set departmentName=#{departmentName},deputyGeneral=#{deputyGeneral},
        warehouseManager=#{warehouseManager},guardian=#{guardian},materialManager=#{materialManager},
        picker=#{picker},pickerDate=NOW(),nowTime=NOW() ,checkState='ToOutbound'where materialRequisitionId=#{materialRequisitionId};
    </update>

    <!--根据领料编号获取信息-->
    <select id="getByMaterialRequisitionId" parameterType="String" resultMap="MaterialRequisitionListRM">
        select * from t_pl_materialrequisitionorder where materialRequisitionId=#{materialRequisitionId}
    </select>

    <!--添加出库信息==》危废-->
    <insert id="addOutBoundOrder" parameterType="OutboundOrder">
        insert into  t_pl_outboundorder (outboundOrderId,clientId,wareHouseId,transferDraftId,wastesName,wasteCategory,outboundDate,creator,auditor,outboundNumber,equipment,nowTime,checkState,boundType,handelCategory,processWay,inboundOrderItemId,handleCategoryId,processWayId,equipmentId,checkStateId)
        values
        (#{outboundOrderId},#{client.clientId},#{wareHouse.wareHouseId},#{transferDraftId},#{wastesName},#{wasteCategory},#{outboundDate},#{creator},#{auditor},#{outboundNumber},#{equipment},NOW(),'OutBounded','WasteOutbound',#{handelCategory},#{processWay},#{inboundOrderItemId},#{handleCategoryItem.dataDictionaryItemId},#{processWayItem.dataDictionaryItemId},#{equipmentDataItem.dataDictionaryItemId},81)
    </insert>

    <!--出库完毕后更新领料单的信息为已出库-->
    <update id="updateMaterialRequisitionOrderCheck" parameterType="String">
        update t_pl_materialrequisitionorder set checkStateId=81,nowTime=NOW()
        where materialRequisitionId=#{materialRequisitionId};
    </update>

    <!--添加出库信息==》次生-->
    <insert id="addSecondary" parameterType="OutboundOrder">
        insert into  t_pl_outboundorder (outboundOrderId,clientId,wareHouseId,transferDraftId,wastesName,wasteCategory,outboundDate,creator,auditor,outboundNumber,equipment,nowTime,checkState,boundType,processWay,handelCategory,inboundOrderItemId,departmentName,checkStateId,processWayId,equipmentId,secondaryCategoryId,formTypeId,packageTypeId)
        values
        (#{outboundOrderId},#{client.clientId},#{wareHouse.wareHouseId},#{transferDraftId},#{wastesName},#{wasteCategory},#{outboundDate},#{creator},#{auditor},#{outboundNumber},#{equipment},NOW(),'OutBounded','SecondaryOutbound',#{processWay},#{handelCategory},#{inboundOrderItemId},#{departmentName},81,#{processWayItem.dataDictionaryItemId},#{equipmentDataItem.dataDictionaryItemId},#{secondaryCategoryItem.dataDictionaryItemId},#{formTypeItem.dataDictionaryItemId},#{packageTypeItem.dataDictionaryItemId})
    </insert>

    <resultMap id="WastesOutBoundRM" type="OutboundOrder">
        <result  property="inboundOrderItemId" column="inboundOrderItemId"></result>
        <association property="formTypeItem" column="formTypeId"  select="getFormTypeItem"></association>
        <association property="packageTypeItem" column="packageTypeId"  select="getPackageTypeItem"></association>
        <association property="inboundOrderId" column="inboundOrderItemId" select="getInboundOrderId"></association>
        <association property="client" column="clientId" select="getClientMar"></association>
        <association property="wareHouse" column="wareHouseId" select="getwareHouse"></association>
        <association property="inventoryNumber" column="inboundOrderItemId" select="getInventoryNumber"></association>
      <collection property="handleCategoryItem" column="handleCategoryId" select="getHandleCategoryItem"></collection>
        <collection property="equipmentDataItem" column="equipmentId" select="getEquipmentDataItem"></collection>
        <collection property="processWayItem" column="processWayId" select="getProcessWayItem"></collection>
        <collection property="checkStateItem" column="checkStateId" select="getCheckStateItem"></collection>
        <collection property="secondaryCategoryItem" column="secondaryCategoryId" select="getSecondaryCategoryItem"></collection>
    </resultMap>

    <!--获取状态数据字典-->
    <select id="getCheckStateItem" resultType="CheckStateItem">
        select  * from datadictionaryitem where dataDictionaryItemId=#{checkStateId}
    </select>
    <!--获取和处置设备数据字典-->
    <select id="getEquipmentDataItem" resultType="EquipmentDataItem">
        select  * from datadictionaryitem where dataDictionaryItemId=#{equipmentId}
    </select>
<select id="getInboundOrderId" resultType="String">
    select inboundOrderId from t_pl_wasteinventory where inboundOrderItemId=#{inboundOrderItemId};
</select>

    <select id="getInventoryNumber" resultType="float">
        select actualCount from  t_pl_wasteinventory where inboundOrderItemId=#{inboundOrderItemId};
    </select>
    <!--加载危废出库-->
    <select id="loadWastesOutBoundList" resultMap="WastesOutBoundRM">
        select * from t_pl_outboundorder where  boundType='WasteOutbound'  and checkStateId not in(69,85)order by outboundOrderId desc
        <if test="start != null and count != null">
            limit #{start}, #{count};
        </if>
    </select>

    <!--预处理获取危废出库数据接口-->
    <select id="loadOutBoundList" resultMap="WastesOutBoundRM">
        select * from t_pl_outboundorder
        where boundType='WasteOutbound' and checkState = 'OutBounded'
        order by outboundOrderId desc
        <if test="start != null and count != null and count != 0">
            limit #{start}, #{count};
        </if>
    </select>

    <!--根据出库单号查询出库信息++>危废-->
    <select id="getWastesOutBoundById" parameterType="String" resultMap="WastesOutBoundRM">
     select * from t_pl_outboundorder where  boundType='WasteOutbound'and  outboundOrderId=#{outboundOrderId};
</select>

    <!--根据出库单号查询出库信息++>次生-->

    <select id="getSecOutBoundById" parameterType="String" resultMap="WastesOutBoundRM">
     select * from t_pl_outboundorder where  boundType='SecondaryOutbound'and  outboundOrderId=#{outboundOrderId};
</select>

    <!--加载次生出库-->
    <select id="loadSecOutBoundList" resultMap="WastesOutBoundRM">
        select * from t_pl_outboundorder where boundType='SecondaryOutbound' and checkStateId not in(69,85)      order by outboundOrderId desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <resultMap id="MaterialRequisitionOrderRM" type="MaterialRequisitionOrder">
        <collection property="client" column="clientId" select="getClientMar"></collection>
   <collection property="wareHouse" column="wareHouseId" select="getwareHouse"></collection>
    <collection property="checkStateItem" column="checkStateId" select="getCheckStateItem"></collection>
    </resultMap>

    <!--加载领料单列表-->
    <select id="getMaterialRequisitionOrderList" resultMap="MaterialRequisitionOrderRM">
        select * from t_pl_materialrequisitionorder where checkStateId not in (69,81)order by  materialRequisitionId desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>


    <!--根据年月日查询配料单单据中的个数-->
    <select id="getCountByTime" resultType="int" parameterType="String">
    select count(*) from t_pl_batchingorder  where batchingOrderId like "%"#{prefix}"%";
    </select>

    <!--根据年月日查询出库单但剧中的个数-->
    <select id="getSecCountByTime" resultType="int" parameterType="String">
         select count(*) from t_pl_outboundorder  where outboundOrderId like "%"#{prefix}"%";
    </select>

    <!--根据明细单号获取库存数量-->
    <select id="getCountByInboundOrderItemId" resultType="float" parameterType="String">
        select actualCount from t_pl_wasteinventory where inboundOrderItemId=#{inboundOrderItemId};
    </select>

    <!--根据仓库和危废名称获取总数-->
    <select id="getCountByWareHouseAndName" resultType="float">
        select sum(actualCount) from t_pl_wasteinventory where wareHouseId=#{0} and secondaryCategoryId=#{1};
    </select>

    <!--修改配料单数量-->
    <update id="updateBatchingOrder" parameterType="BatchingOrder">
        update t_pl_batchingorder set batchingNumber=#{batchingNumber},batchingDate=#{batchingDate} where batchingOrderId=#{batchingOrderId}
    </update>

    <!--更新库存数量-->
    <update id="updateWasteInventoryActualCount">
        update t_pl_wasteinventory set actualCount=#{1} where inboundOrderItemId=#{0};
    </update>


    <!--根据配料单号查询领料中包含的个数-->
    <select id="getCountByBatchId" resultType="int" parameterType="String">
    select count(*) from t_pl_materialrequisitionorder  where materialRequisitionId like "%"#{prefix}"%";
    </select>

    <!--领料单添加成功后就更新配料单数量-->
    <update id="updateBatchOrderNumberAfterMater">
        update t_pl_batchingorder set batchingNumber=batchingNumber-#{1} where batchingOrderId=#{0};
    </update>

    <!--根据配料单号查询配量数-->
    <select id="getCountByBatchingOrderId" resultType="float" parameterType="String">
        select batchingNumber from t_pl_batchingorder where batchingOrderId=#{batchingOrderId};
    </select>

    <!--修改领料单数据-->
    <update id="adjustMaterialRequisitionOrder" parameterType="MaterialRequisitionOrder">
        update t_pl_materialrequisitionorder set batchingNumber=#{batchingNumber},recipientsNumber=#{recipientsNumber},
        deputyGeneral=#{deputyGeneral},warehouseManager=#{warehouseManager},guardian=#{guardian},picker=#{picker},materialManager=#{materialManager} where materialRequisitionId=#{materialRequisitionId}

    </update>

    <!--通过配料单号更新配量-->
    <update id="updateCountByBatchingOrderId">
        update t_pl_batchingorder set  batchingNumber=#{1} where batchingOrderId=#{0};
    </update>

    <!--更新次生出库单-->
    <update id="updateSecOutBound" parameterType="OutboundOrder">
        update t_pl_outboundorder set outboundNumber=#{outboundNumber},outboundDate=#{outboundDate} where outboundOrderId=#{outboundOrderId}
    </update>

    <!--配料单作废-->
    <update id="cancelBatchingOrder" parameterType="BatchingOrder">
        update t_pl_batchingorder set checkStateId=69 where batchingOrderId=#{batchingOrderId}
    </update>

    <!--配料单作废后更新库存-->
    <update id="updateInventoryNumber">
        update t_pl_wasteinventory set actualCount=#{1} where inboundOrderItemId=#{0};
    </update>

    <!--领料单作废-->
    <update id="cancelMaterialRequisitionOrder" parameterType="MaterialRequisitionOrder">
        update t_pl_materialrequisitionorder set checkStateId=69 where  materialRequisitionId=#{materialRequisitionId}
    </update>

    <!--领料单作废后更新配料单-->
    <update id="updateBatchOrderNumber">
        update t_pl_batchingorder set batchingNumber=batchingNumber+#{1} where batchingOrderId=#{0};
    </update>

    <!--出库单作废-->
    <update id="cancelOutBoundOrder" parameterType="OutboundOrder">
        update t_pl_outboundorder set  checkStateId=69 where outboundOrderId=#{outboundOrderId};
    </update>

    <!--出库单作废后更新库存数量-->
    <update id="updateInventoryNumberAfterInvalid">
        update t_pl_wasteinventory set actualCount=#{1} where inboundOrderItemId=#{0};
    </update>

    <!--退库-->
    <update id="retireOutBoundOrder" parameterType="OutboundOrder">
        update t_pl_outboundorder set  checkStateId=85 where outboundOrderId=#{outboundOrderId};
    </update>

<!--根据入库单日期升序获取次生入库信息-->
    <select id="getSecInventoryByDate" resultMap="WasteInventoryListBatRM">
select wasteInventoryId,inboundDate,actualCount,secondaryCategoryId,wareHouseId from t_pl_wasteinventory where secondaryCategoryId=#{0} and wareHouseId=#{1} and  actualCount>0 order by inboundDate
    </select>

    <!--获取最新的次生入库信息-->
    <select id="getSecInventoryByDateDesc" resultMap="WasteInventoryListBatRM">
    select wasteInventoryId,inboundDate,actualCount,secondaryCategoryId,wareHouseId from t_pl_wasteinventory where secondaryCategoryId=#{0} and wareHouseId=#{1} and  actualCount>0 order by inboundDate desc limit 0,1;
   </select>
    <!--次生扣减库存 库存量小于出库量 库存量为0-->
   <update id="lessThanOutBoundNumber" parameterType="String">
   update t_pl_wasteinventory set actualCount=0 where wasteInventoryId=#{wasteInventoryId}
   </update>
    <!--次生扣减库存 库存量大于出库量 做减法即可-->
    <update id="moreThanOutBoundNumber">
  update  t_pl_wasteinventory set actualCount=actualCount-#{1} where wasteInventoryId=#{0}
    </update>

    <!--更新库存数量==》小于0的时候-->
    <update id="AddWasteInventory" >
        update t_pl_wasteinventory set actualCount=actualCount-#{0} where wasteInventoryId=#{1};

    </update>

    <!--根据出库单号锁定出库单-->
    <update id="confirmSettled" parameterType="String">
        update t_pl_outboundorder set checkStateId=253 where outboundOrderId=#{outboundOrderId}
    </update>

    <!--获取已结账的出库单的日期次生-->
    <select id="getDateBbySettled" resultType="String">
        SELECT date_format(outboundDate,'%Y-%m')  FROM t_pl_outboundorder WHERE checkStateId=253 and boundType="SecondaryOutbound";
    </select>

    <!--获取已结账的出库单的日期危废-->
    <select id="getDateBbySettledWastes" resultType="String">
SELECT date_format(outboundDate,'%Y-%m')  FROM t_pl_outboundorder WHERE checkStateId=253 and boundType="WasteOutbound";
    </select>

    <!--危废库存查询-->
    <select id="searchWastesInventory" parameterType="WasteInventory" resultMap="WasteInventoryListBatRM">
        select * from t_pl_wasteinventory
        <where>
            <if test="keyword!='' and keyword!=null">
                or inboundOrderId like binary"%"#{keyword}"%"
                or inboundDate like binary"%"#{keyword}"%"
                or clientId in (select clientId from client where companyName like binary"%"#{keyword}"%")
                or warehouseId in (select warehouseId from t_pl_warehouse where warehouseName like binary"%"#{keyword}"%")
                or handleCategoryId in (select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like binary"%"#{keyword}"%")
                or wastesName like binary"%"#{keyword}"%"
                or wastesCode like binary"%"#{keyword}"%"
                or actualCount =#{keyword}
                and boundType="WasteInbound"
            </if>
            <if test="beginTime!=null">
                <![CDATA[ and DATE_FORMAT(inboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d') ]]>
            </if>
            <if test="endTime!=null">
                <![CDATA[ and DATE_FORMAT(inboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endTime}, '%Y-%m-%d') ]]>
            </if>
            <if test="handleCategoryItem!=null">
                <if test="handleCategoryItem.dataDictionaryItemId!=0">
                    and handleCategoryId=#{handleCategoryItem.dataDictionaryItemId}
                </if>
            </if>
            <if test="produceCompany!=null">
                <if test="produceCompany.companyName!='' and produceCompany.companyName!=null">
                    and clientId in(select clientId from client where companyName like #{produceCompany.companyName} )
                </if>
            </if>
            <if test="wareHouse!=null">
                <if test="wareHouse.wareHouseName!='' and wareHouse.wareHouseName!=null">
                    and wareHouseId  in (select warehouseId from t_pl_warehouse where warehouseName like #{wareHouse.wareHouseName})
                </if>
            </if>
            <if test="keyword==''">
                and boundType="WasteInbound"
            </if>
        </where>
        order by inboundDate desc
        <if test="page != null and page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>


    <!--危废库存查询计数-->
    <select id="searchWastesInventoryCount"  resultType="int" parameterType="WasteInventory">
        select  count(*) from t_pl_wasteinventory
        <where>
            <if test="keyword!='' and keyword!=null">
                or inboundOrderId like binary"%"#{keyword}"%"
                or inboundDate like binary"%"#{keyword}"%"
                or clientId in (select clientId from client where companyName like binary"%"#{keyword}"%")
                or warehouseId in (select warehouseId from t_pl_warehouse where warehouseName like binary"%"#{keyword}"%")
                or handleCategoryId in (select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like binary"%"#{keyword}"%")
                or wastesName like binary"%"#{keyword}"%"
                or wastesCode like binary"%"#{keyword}"%"
                or actualCount =#{keyword}
                and boundType="WasteInbound"
            </if>
            <if test="beginTime!=null">
                <![CDATA[ and DATE_FORMAT(inboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d') ]]>
            </if>
            <if test="endTime!=null">
                <![CDATA[ and DATE_FORMAT(inboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endTime}, '%Y-%m-%d') ]]>
            </if>
            <if test="handleCategoryItem!=null">
                <if test="handleCategoryItem.dataDictionaryItemId!=0">
                    and handleCategoryId=#{handleCategoryItem.dataDictionaryItemId}
                </if>
            </if>
            <if test="produceCompany!=null">
                <if test="produceCompany.companyName!='' and produceCompany.companyName!=null">
                    and clientId in(select clientId from client where companyName like #{produceCompany.companyName} )
                </if>
            </if>
            <if test="wareHouse!=null">
                <if test="wareHouse.wareHouseName!='' and wareHouse.wareHouseName!=null">
                    and wareHouseId  in (select warehouseId from t_pl_warehouse where warehouseName like #{wareHouse.wareHouseName})
                </if>
            </if>
            <if test="keyword==''">
                and boundType="WasteInbound"
            </if>
        </where>
    </select>

    <!--次生出库查询-->
    <select id="searchSecOutbound" resultMap="WastesOutBoundRM" parameterType="OutboundOrder">
        select * from t_pl_outboundorder
        <where>
            <if test="keywords!=''and keywords!=null">
                or outboundOrderId like "%"#{keywords}"%"
                or wareHouseId in (select warehouseId from t_pl_warehouse where warehouseName =#{keywords})
                or wasteCategory like "%"#{keywords}"%"
                or wastesName like "%"#{keywords}"%"
                or processWayId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like "%"#{keywords}"%" and dataDictionaryId=8)
                or outboundNumber like "%"#{keywords}"%"
                or packageTypeId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like "%"#{keywords}"%" and dataDictionaryId=21)
                or transferDraftId like "%"#{keywords}"%"
                or outboundDate like binary "%"#{keywords}"%"
                or checkStateId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like "%"#{keywords}"%" and dataDictionaryId=11)
            </if>
            <if test="wastesName!='' and wastesName!=null">
                and wastesName like "%"#{wastesName}"%"
            </if>
            <if test="wasteCategory!='' and wasteCategory!=null">
                and wasteCategory like "%"#{wasteCategory}"%"
            </if>
            <if test="processWayItem!=null">
                <if test="processWayItem.dataDictionaryItemId!=0">
                    and processWayId=#{processWayItem.dataDictionaryItemId}
                </if>
            </if>
                  <if test="wareHouse!=null">
                      <if test="wareHouse.wareHouseId!=0">
                          and wareHouseId=#{wareHouse.wareHouseId}
                      </if>
                  </if>
            <if test="startDate!=null">
                <![CDATA[ and DATE_FORMAT(outboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="endDate!=null">
                <![CDATA[ and DATE_FORMAT(outboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d') ]]>
            </if>
            and boundType="SecondaryOutbound"
        </where>
        order by nowTime desc
        <if test="page != null and page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>

    <!--次生出库查询计数-->
    <select id="searchSecOutboundCount" resultType="int" parameterType="OutboundOrder">
        select count(*) from t_pl_outboundorder
        <where>
            <if test="keywords!=''and keywords!=null">
                or outboundOrderId like "%"#{keywords}"%"
                or wareHouseId in (select warehouseId from t_pl_warehouse where warehouseName =#{keywords})
                or wasteCategory like "%"#{keywords}"%"
                or wastesName like "%"#{keywords}"%"
                or processWayId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like "%"#{keywords}"%" and dataDictionaryId=8)
                or outboundNumber like "%"#{keywords}"%"
                or packageTypeId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like "%"#{keywords}"%" and dataDictionaryId=21)
                or transferDraftId like "%"#{keywords}"%"
                or outboundDate like binary "%"#{keywords}"%"
                or checkStateId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like "%"#{keywords}"%" and dataDictionaryId=11)
            </if>
            <if test="wastesName!='' and wastesName!=null">
                and wastesName like "%"#{wastesName}"%"
            </if>
            <if test="wasteCategory!='' and wasteCategory!=null">
                and wasteCategory like "%"#{wasteCategory}"%"
            </if>
            <if test="processWayItem!=null">
                <if test="processWayItem.dataDictionaryItemId!=0">
                    and processWayId=#{processWayItem.dataDictionaryItemId}
                </if>
            </if>
            <if test="wareHouse!=null">
                <if test="wareHouse.wareHouseId!=0">
                    and wareHouseId=#{wareHouse.wareHouseId}
                </if>
            </if>
            <if test="startDate!=null">
                <![CDATA[ and DATE_FORMAT(outboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="endDate!=null">
                <![CDATA[ and DATE_FORMAT(outboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d') ]]>
            </if>
            and boundType="SecondaryOutbound"
        </where>
    </select>

<!--配料单查询-->
<select id="searchBatchingOrder" parameterType="BatchingOrder" resultMap="BatchingOrderRM">
    select  * from t_pl_batchingorder
    <where>
        <if test="keyword!=null and keyword!=''">
               or batchingOrderId like binary"%"#{keyword}"%"
              or wareHouseId in(select warehouseId from t_pl_warehouse where warehouseName like binary"%"#{keyword}"%")
               or produceCompany in (select clientId from client where companyName like binary"%"#{keyword}"%")
                or wastesName like binary"%"#{keyword}"%"
              or batchingDate like binary"%"#{keyword}"%"
            or createDate like binary"%"#{keyword}"%"
            or transferDraftId like binary"%"#{keyword}"%"
            or handleCategoryId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like binary"%"#{keyword}"%"  and dataDictionaryId=6)
            or processWayId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like binary"%"#{keyword}"%"  and dataDictionaryId=8)
        </if>
               <if test="produceCompany!=null">
                       <if test="produceCompany.companyName!='' and produceCompany.companyName!=null">
                           and produceCompany in(select clientId from client where companyName like binary"%"#{produceCompany.companyName}"%")
                       </if>
               </if>
        <if test="wastesName!=''and wastesName!=null">
             and wastesName like binary"%"#{wastesName}"%"
        </if>
        <if test="processWayItem!=null">
            <if test="processWayItem.dataDictionaryItemId!=0">
                and processWayId =#{processWayItem.dataDictionaryItemId}
            </if>
        </if>
        <if test="beginTime!=null">
            <![CDATA[ and DATE_FORMAT(batchingDate, '%Y-%m-%d') >=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d') ]]>
        </if>
        <if test="endTime!=null">
            <![CDATA[ and DATE_FORMAT(batchingDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endTime}, '%Y-%m-%d') ]]>
        </if>
    </where>
    order by batchingOrderId desc
    <if test="page != null and page.start != null and page.count != null">
        limit #{page.start}, #{page.count}
    </if>
</select>

    <!--配料单查询计数-->
    <select id="searchBatchingTotal" resultType="int" parameterType="BatchingOrder">
        select count(*) from t_pl_batchingorder
        <where>
            <if test="keyword!=null and keyword!=''">
                or batchingOrderId like binary"%"#{keyword}"%"
                or wareHouseId in(select warehouseId from t_pl_warehouse where warehouseName like binary"%"#{keyword}"%")
                or produceCompany in (select clientId from client where companyName like binary"%"#{keyword}"%")
                or wastesName like binary"%"#{keyword}"%"
                or batchingDate like binary"%"#{keyword}"%"
                or createDate like binary"%"#{keyword}"%"
                or transferDraftId like binary"%"#{keyword}"%"
                or handleCategoryId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like binary"%"#{keyword}"%"  and dataDictionaryId=6)
                or processWayId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like binary"%"#{keyword}"%" and dataDictionaryId=8)
            </if>
            <if test="produceCompany!=null">
                <if test="produceCompany.companyName!='' and produceCompany.companyName!=null">
                    and produceCompany in(select clientId from client where companyName like binary"%"#{produceCompany.companyName}"%")
                </if>
            </if>
            <if test="wastesName!=''and wastesName!=null">
                and wastesName like binary"%"#{wastesName}"%"
            </if>
            <if test="processWayItem!=null">
                <if test="processWayItem.dataDictionaryItemId!=0">
                    and processWayId =#{processWayItem.dataDictionaryItemId}
                </if>
            </if>
            <if test="beginTime!=null">
                <![CDATA[ and DATE_FORMAT(batchingDate, '%Y-%m-%d') >=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d') ]]>
            </if>
            <if test="endTime!=null">
                <![CDATA[ and DATE_FORMAT(batchingDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endTime}, '%Y-%m-%d') ]]>
            </if>
        </where>
    </select>

    <!--领料单高级查询-->
    <select id="searchMaterialRequisitionOrder" parameterType="MaterialRequisitionOrder" resultMap="MaterialRequisitionOrderRM">
        select * from t_pl_materialrequisitionorder
        <where>
            <if test="keyword!=null and keyword!=''">
                or materialRequisitionId like "%"#{keyword}"%"
                or clientId in(select clientId from client where companyName like "%"#{keyword}"%")
                or wastesName like "%"#{keyword}"%"
                or wasteCategory like "%"#{keyword}"%"
                 or  ROUND(recipientsNumber,2) = #{keyword}
                 or checkStateId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like "%"#{keyword}"%")

            </if>
                <if test="client!=null">
                <if test="client.companyName!=null and client.companyName!=''">
                    and  clientId in(select clientId from client where companyName = #{client.companyName})
                </if>
                </if>
            <if test="wastesName!=null and wastesName!=''">
                and wastesName = #{wastesName}
            </if>
            <if test="wasteCategory!=null and wasteCategory!=''">
                and wasteCategory = #{wasteCategory}
            </if>
            <if test="recipientsNumber!=null and recipientsNumber!=''">
                and  ROUND(recipientsNumber,2) = #{recipientsNumber}
            </if>
            <if test="checkStateItem!=null">
                <if test="checkStateItem.dataDictionaryItemId!=0">
                    and checkStateId=#{checkStateItem.dataDictionaryItemId}
                </if>
            </if>
        </where>
        order by materialRequisitionId desc
        <if test="page != null and page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>

    <!--领料单高级查询计数-->
    <select id="searchMaterialRequisitionOrderCount" resultType="int" parameterType="MaterialRequisitionOrder">
        select count(*) from t_pl_materialrequisitionorder
        <where>
            <if test="keyword!=null and keyword!=''">
                or materialRequisitionId like "%"#{keyword}"%"
                or clientId in(select clientId from client where companyName like "%"#{keyword}"%")
                or wastesName like "%"#{keyword}"%"
                or wasteCategory like "%"#{keyword}"%"
                or  ROUND(recipientsNumber,2) = #{keyword}
                or checkStateId in(select dataDictionaryItemId from datadictionaryitem where dictionaryItemName like "%"#{keyword}"%")
            </if>
            <if test="client!=null">
                <if test="client.companyName!=null and client.companyName!=''">
                    and  clientId in(select clientId from client where companyName = #{client.companyName})
                </if>
            </if>
            <if test="wastesName!=null and wastesName!=''">
                and wastesName = #{wastesName}
            </if>
            <if test="wasteCategory!=null and wasteCategory!=''">
                and wasteCategory = #{wasteCategory}
            </if>
            <if test="recipientsNumber!=null and recipientsNumber!=''">
                and  ROUND(recipientsNumber,2) = #{recipientsNumber}
            </if>
            <if test="checkStateItem!=null">
                <if test="checkStateItem.dataDictionaryItemId!=0">
                    and checkStateId=#{checkStateItem.dataDictionaryItemId}
                </if>
            </if>
        </where>
    </select>
</mapper>