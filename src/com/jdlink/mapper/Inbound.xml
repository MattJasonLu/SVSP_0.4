<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jdlink.mapper.InboundMapper">
    <!--入库计划单映射集-->
    <resultMap id="InboundPlanOrderRM" type="InboundPlanOrder" autoMapping="true">
        <id column="inboundPlanOrderId" property="inboundPlanOrderId"/>
        <association property="wastes" javaType="com.jdlink.domain.Wastes">
            <result column="wastesName" property="name"/>
            <result column="wastesCode" property="wastesId"/>
            <result column="wastesCategory" property="category"/>
        </association>
        <association property="produceCompany" column="produceCompanyId" select="getProduceCompany"/>
        <association property="acceptCompany" column="acceptCompanyId" select="getAcceptCompany"/>
    </resultMap>

    <!--入库单映射集-->
    <resultMap id="InboundOrderRM" type="InboundOrder" autoMapping="true">
        <id column="inboundOrderId" property="inboundOrderId"/>
        <association property="checkStateItem" column="checkStateId" select="getCheckStateItem"></association>
        <association property="recordStateItem" column="recordStateId" select="getRecordStateItem"></association>
        <association column="warehouseId" property="wareHouse" select="getWarehouse"/>
        <collection property="inboundOrderItemList" column="inboundOrderId" select="getInboundOrderItemList"
                    ofType="com.jdlink.domain.Inventory.InboundOrderItem" javaType="ArrayList"/>
    </resultMap>

    <!--获取状态数据字典-->
    <select id="getCheckStateItem" resultType="CheckStateItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{checkStateId}
    </select>

    <!--获取记录状态数据字典-->
    <select id="getRecordStateItem" resultType="RecordStateItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{checkStateId}
    </select>


    <resultMap id="InboundOrderItemRM" type="InboundOrderItem" autoMapping="true">
        <id column="inboundOrderItemId" property="inboundOrderItemId"/>
        <result property="inboundDate" column="inboundDate" />
        <association property="produceCompany" select="getProduceCompany" column="produceCompanyId"/>
        <association property="wastes" javaType="Wastes">
            <id property="name" column="wastesName"/>
            <result property="wastesId" column="wastesCode"/>
            <result property="category" column="wastesCategory"/>
        </association>
        <association property="wareHouse" column="wareHouseId" select="getWarehouse"/>
        <association property="laboratoryTest" column="laboratoryTestId" select="getLaboratoryTest"/>
        <association property="processWayItem" column="processWayId" select="getProcessWayItem" />
        <association property="handleCategoryItem" column="handleCategoryId" select="getHandleCategoryItem" />
        <association property="formTypeItem" column="formTypeId" select="getFormTypeItem" />
        <association property="packageTypeItem" column="packageTypeId" select="getPackageTypeItem" />
        <association property="unitDataItem" column="unitId" select="getUnitDataItem" />
        <association property="secondaryCategoryItem" column="secondaryCategoryId" select="getSecondaryCategoryItem" />
    </resultMap>

    <!--获取物质形态数据字典-->
    <select id="getFormTypeItem" resultType="FormTypeItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{formTypeId}
    </select>

    <!--获取包装方式数据字典-->
    <select id="getPackageTypeItem" resultType="PackageTypeItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{packageTypeId}
    </select>

    <!--获取单位数据数据字典-->
    <select id="getUnitDataItem" resultType="UnitDataItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{unitId}
    </select>

    <!--获取次生名称数据字典-->
    <select id="getSecondaryCategoryItem" resultType="SecondaryCategoryItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{secondaryCategoryId}
    </select>

    <!--获取进料方式数据字典-->
    <select id="getHandleCategoryItem" resultType="HandleCategoryItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{handleCategoryId}
    </select>

    <!--获取处置方式数据字典-->
    <select id="getProcessWayItem" resultType="ProcessWayItem">
        select * from datadictionaryitem where dataDictionaryItemId=#{processWayId}
    </select>

    <select id="getWarehouse" resultType="WareHouse">
        select * from t_pl_warehouse where warehouseId=#{wareHouseId};
    </select>

    <select id="listInboundPlanOrder" resultMap="InboundPlanOrderRM">
        SELECT * FROM t_pl_inboundplanorder
        <where>
            <if test="keyword != null and keyword != ''">
                and inboundPlanOrderId LIKE "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y-%m-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y-%c-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y-%c-%e') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y%m%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y%c%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y%c%e') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y.%m.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y.%c.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y.%c.%e') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y-%m-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y-%c-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y-%c-%e') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y%m%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y%c%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y%c%e') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y.%m.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y.%c.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y.%c.%e') like "%"#{keyword}"%"
                or transferDraftId like "%"#{keyword}"%"
                or wastesName like "%"#{keyword}"%"
                or wastesCode like "%"#{keyword}"%"
            </if>
            <if test="inboundPlanOrderId != null and inboundPlanOrderId != ''">
                and inboundPlanOrderId LIKE "%"#{inboundPlanOrderId}"%"
            </if>
            <if test="produceCompany != null and produceCompany.companyName != null">
                and produceCompanyId in (select clientId from client where companyName like "%"#{produceCompany.companyName}"%")
            </if>
            <if test="departmentId != null and departmentId != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                and (DATE_FORMAT(planDate,'%Y-%m-%d') like "%"#{departmentId}"%"
                or DATE_FORMAT(planDate,'%Y%m%d') like "%"#{departmentId}"%")
            </if>
            <if test="companyId != null and companyId != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                and (DATE_FORMAT(transferDate,'%Y-%m-%d') like "%"#{companyId}"%"
                or DATE_FORMAT(transferDate,'%Y%m%d') like "%"#{companyId}"%")
            </if>
            <if test="transferDraftId != null and transferDraftId != ''">
                and transferDraftId LIKE "%"#{transferDraftId}"%"
            </if>
            <if test="wastes != null">
                <if test="wastes.name != null and wastes.name != ''">
                    and wastesName LIKE "%"#{wastes.name}"%"
                </if>
                <if test="wastes.wastesId != null and wastes.wastesId != ''">
                    and wastesCode LIKE "%"#{wastes.wastesId}"%"
                </if>
            </if>
            <if test="true">
                and checkState != 'Invalid'
            </if>
        </where>
        order by createDate desc
        <if test="page != null and page.start != null and page.count != null and page.count != 0">
            limit #{page.start}, #{page.count}
        </if>
    </select>

    <select id="countInboundPlanOrder" resultType="int">
        select count(*) from t_pl_inboundplanorder
        <where>
            <if test="keyword != null and keyword != ''">
                and inboundPlanOrderId LIKE "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y-%m-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y-%c-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y-%c-%e') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y%m%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y%c%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y%c%e') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y.%m.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y.%c.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(planDate,'%Y.%c.%e') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y-%m-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y-%c-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y-%c-%e') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y%m%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y%c%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y%c%e') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y.%m.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y.%c.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(transferDate,'%Y.%c.%e') like "%"#{keyword}"%"
                or transferDraftId like "%"#{keyword}"%"
                or wastesName like "%"#{keyword}"%"
                or wastesCode like "%"#{keyword}"%"
            </if>
            <if test="inboundPlanOrderId != null and inboundPlanOrderId != ''">
                and inboundPlanOrderId LIKE "%"#{inboundPlanOrderId}"%"
            </if>
            <if test="produceCompany != null and produceCompany.companyName != null">
                and produceCompanyId in (select clientId from client where companyName like "%"#{produceCompany.companyName}"%")
            </if>
            <if test="departmentId != null and departmentId != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                and (DATE_FORMAT(planDate,'%Y-%m-%d') like "%"#{departmentId}"%"
                or DATE_FORMAT(planDate,'%Y%m%d') like "%"#{departmentId}"%")
            </if>
            <if test="companyId != null and companyId != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                and (DATE_FORMAT(transferDate,'%Y-%m-%d') like "%"#{companyId}"%"
                or DATE_FORMAT(transferDate,'%Y%m%d') like "%"#{companyId}"%")
            </if>
            <if test="transferDraftId != null and transferDraftId != ''">
                and transferDraftId LIKE "%"#{transferDraftId}"%"
            </if>
            <if test="wastes != null">
                <if test="wastes.name != null and wastes.name != ''">
                    and wastesName LIKE "%"#{wastes.name}"%"
                </if>
                <if test="wastes.wastesId != null and wastes.wastesId != ''">
                    and wastesCode LIKE "%"#{wastes.wastesId}"%"
                </if>
            </if>
            <if test="true">
                and checkState != 'Invalid'
            </if>
        </where>
    </select>

    <select id="getInboundPlanOrder" resultMap="InboundPlanOrderRM">
        select * from t_pl_inboundplanorder where inboundPlanOrderId=#{inboundPlanOrderId};
    </select>

    <!--设置入库计划单作废-->
    <update id="setInboundPlanOrderInvalid">
        update t_pl_inboundplanorder set checkState='Invalid', inboundPlanOrderId=concat(#{inboundPlanOrderId}, #{newId}) where inboundPlanOrderId=#{inboundPlanOrderId};
    </update>

    <!--收样入库计划单-->
    <update id="setInboundPlanOrderSignIn">
        update t_pl_inboundplanorder set checkState='Collected' where inboundPlanOrderId=#{inboundPlanOrderId};
    </update>

    <!--设置入库计划单拒收-->
    <update id="setInboundPlanOrderReject">
        update t_pl_inboundplanorder set checkState='Rejected', advice=#{advice} where inboundPlanOrderId=#{inboundPlanOrderId};
    </update>

    <!--根据磅单信息更新入库计划单中的磅单数量-->
    <update id="updateInboundPlanPounds">
        update t_pl_inboundplanorder set poundsCount=#{poundsCount} where transferDraftId = #{transferDraftId};
    </update>

    <!-- 增加入库计划单 -->
    <insert id="addInboundPlanOrder" parameterType="InboundPlanOrder" >
        INSERT INTO t_pl_inboundplanorder (inboundPlanOrderId, planDate, produceCompanyId,
        acceptCompanyId, transferDate, transferDraftId, prepareTransferCount, transferCount, storageCount,
        leftCount, poundsCount, wastesName, wastesCode, wastesCategory, creatorId, createDate, departmentId, companyId,
        modifierId, salesmanId, checkState, recordState, processWay, handleCategory, isQualified)
        VALUES (#{inboundPlanOrderId}, #{planDate}, #{produceCompany.clientId},
        #{acceptCompany.clientId}, #{transferDate}, #{transferDraftId}, #{prepareTransferCount}, #{transferCount}, #{storageCount},
        #{leftCount}, #{poundsCount}, #{wastes.name}, #{wastes.code}, #{wastes.category}, #{creatorId}, NOW(), #{departmentId},
        #{companyId}, #{modifierId}, #{salesman.salesmanId}, #{checkState}, #{recordState}, #{processWay}, #{handleCategory},
        #{isQualified});
    </insert>

    <select id="searchInboundPlanOrder" parameterType="InboundPlanOrder" resultMap="InboundPlanOrderRM">
        SELECT * FROM t_pl_inboundplanorder
        <where>
            <if test="inboundPlanOrderId != null and inboundPlanOrderId != ''">
                and inboundPlanOrderId LIKE "%"#{inboundPlanOrderId}"%"
            </if>
            <if test="departmentId != null and departmentId != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                and (DATE_FORMAT(planDate,'%Y-%m-%d') like "%"#{departmentId}"%"
                or DATE_FORMAT(planDate,'%Y%m%d') like "%"#{departmentId}"%")
            </if>
            <if test="companyId != null and companyId != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                and (DATE_FORMAT(transferDate,'%Y-%m-%d') like "%"#{companyId}"%"
                or DATE_FORMAT(transferDate,'%Y%m%d') like "%"#{companyId}"%")
            </if>
            <if test="transferDraftId != null and transferDraftId != ''">
                and transferDraftId LIKE "%"#{transferDraftId}"%"
            </if>
            <if test="wastes != null">
                <if test="wastes.name != null and wastes.name != ''">
                    and wastesName LIKE "%"#{wastes.name}"%"
                </if>
                <if test="wastes.wastesId != null and wastes.wastesId != ''">
                    and wastesCode LIKE "%"#{wastes.wastesId}"%"
                </if>
            </if>
        </where>
    </select>

    <!-- 查询入库计划单中的前缀数量 -->
    <select id="getInboundPlanCountByPrefix" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM t_pl_inboundplanorder WHERE inboundPlanOrderId LIKE "%"#{prefix}"%";
    </select>

    <select id="getProduceCompany" parameterType="String" resultType="Client">
        SELECT * FROM client WHERE clientId=#{produceCompanyId};
    </select>
    <select id="getAcceptCompany" parameterType="String" resultType="Client">
        SELECT * FROM client WHERE clientId=#{acceptCompanyId};
    </select>
    <select id="getLaboratoryTest" parameterType="String" resultType="LaboratoryTest">
        SELECT * FROM t_pr_laboratorytest WHERE laboratorytestnumber=#{laboratoryTestId};
    </select>

    <!--增加入库单-->
    <insert id="addInboundOrder" parameterType="InboundOrder">
        INSERT INTO t_pl_inboundorder
        (inboundOrderId, inboundDate, warehouseId, boundType, keeperId, directorId,
        approverId, checkState, remarks, creatorId, createDate, departmentId, companyId, modifierId,
        modifyDate, recordState, category, nowTime, checkStateId, recordStateId)
        VALUES
        (#{inboundOrderId}, #{inboundDate}, #{wareHouse.wareHouseId}, #{boundType},
        #{keeperId}, #{directorId}, #{approverId}, #{checkState}, #{remarks},
        #{creatorId}, #{createDate}, #{departmentId}, #{companyId}, #{modifierId}, #{modifyDate},
        #{recordState}, 0, NOW(),75,
        #{recordStateItem.dataDictionaryItemId});
        <if test="inboundOrderItemList.size() > 0">
            <foreach collection="inboundOrderItemList" item="inboundOrderItem" index="index">
                INSERT INTO t_pl_inboundorderitem (inboundOrderItemId, transferDraftId, inboundOrderId,
                produceCompanyId, processWay, handleCategory,remarks, warehouseArea, recordState,
                isQualified, wastesName, wastesCode, wastesCategory, wastesAmount,unitPriceTax,
                totalPrice, laboratoryTestId, category, formType, packageType, processWayId,
                handleCategoryId, recordStateId, formTypeId, packageTypeId, wareHouseId, tickRateId)
                VALUES
                (#{inboundOrderItem.inboundOrderItemId}, #{inboundOrderItem.transferDraftId},#{inboundOrderItem.inboundOrderId},
                #{inboundOrderItem.produceCompany.clientId}, #{inboundOrderItem.processWay},#{inboundOrderItem.handleCategory}, #{inboundOrderItem.remarks},
                #{inboundOrderItem.warehouseArea}, #{inboundOrderItem.recordState}, #{inboundOrderItem.isQualified},#{inboundOrderItem.wastes.name},
                #{inboundOrderItem.wastes.wastesId}, #{inboundOrderItem.wastes.category},
                #{inboundOrderItem.wastesAmount}, #{inboundOrderItem.unitPriceTax}, #{inboundOrderItem.totalPrice},
                #{inboundOrderItem.laboratoryTest.laboratoryTestNumber}, 0, #{inboundOrderItem.formType}, #{inboundOrderItem.packageType},
                #{inboundOrderItem.processWayItem.dataDictionaryItemId},
                #{inboundOrderItem.handleCategoryItem.dataDictionaryItemId}, #{inboundOrderItem.recordStateItem.dataDictionaryItemId},
                #{inboundOrderItem.formTypeItem.dataDictionaryItemId}, #{inboundOrderItem.packageTypeItem.dataDictionaryItemId},
                #{inboundOrderItem.wareHouse.wareHouseId}, #{inboundOrderItem.ticketRateItem.dataDictionaryItemId});

                insert into t_pl_wasteinto
                (clientId,wastesCode,handleCategory,processWay,remarks,nowTime,transferDraftId,wastesCategory,laboratoryTestId)
                values
                (#{inboundOrderItem.produceCompany.clientId},#{inboundOrderItem.wastes.wastesId},#{inboundOrderItem.handleCategory},#{inboundOrderItem.processWay},
                #{inboundOrderItem.remarks},NOW(),#{inboundOrderItem.transferDraftId},#{inboundOrderItem.wastes.category},#{inboundOrderItem.laboratoryTest.laboratoryTestNumber});

                insert  into t_pl_wasteinventory
                (inboundOrderId,actualCount,unitPriceTax,wastesName,wareHouseId,clientId,wastesCode,inboundDate,processWay,
                handleCategory,creatorDate,boundType,transferDraftId,inboundOrderItemId,laboratoryTestId, processWayId,
                handleCategoryId)
                values
                (#{inboundOrderItem.inboundOrderId},#{inboundOrderItem.wastesAmount},#{inboundOrderItem.unitPriceTax},#{inboundOrderItem.wastes.name},
                #{inboundOrderItem.wareHouse.wareHouseId}, #{inboundOrderItem.produceCompany.clientId},#{inboundOrderItem.wastes.wastesId},#{inboundDate},
                #{inboundOrderItem.processWay}, #{inboundOrderItem.handleCategory},#{createDate},#{boundType},#{inboundOrderItem.transferDraftId},
                #{inboundOrderItem.inboundOrderItemId},#{inboundOrderItem.laboratoryTest.laboratoryTestNumber},
                #{inboundOrderItem.processWayItem.dataDictionaryItemId}, #{inboundOrderItem.handleCategoryItem.dataDictionaryItemId});
            </foreach>
        </if>
    </insert>

    <!--获取日期范围内的危废入库明细-->
    <select id="getInboundOrderItemByRange" resultMap="InboundOrderItemRM">
        SELECT * FROM t_pl_inboundorderitem WHERE t_pl_inboundorderitem.inboundOrderId IN
        (SELECT inboundOrderId FROM t_pl_inboundorder
            <![CDATA[
            WHERE DATE_FORMAT(t_pl_inboundorder.inboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d')
            AND DATE_FORMAT(t_pl_inboundorder.inboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d')
            AND t_pl_inboundorder.boundType='WasteInbound'
            ]]>);
    </select>

    <!--根据日期范围查询危废入库明细数据:统计图表-->
    <select id="getWastesInboundOrderItemAmountByRange" resultMap="InboundOrderItemRM">
        select SUM(a.wastesAmount) as wastesAmount,b.inboundDate from t_pl_inboundorderitem as a left join t_pl_inboundorder as b
        on a.inboundOrderId=b.inboundOrderId
        <where>
            <if test="startDate != null and startDate != ''">
                <![CDATA[AND DATE_FORMAT(b.inboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d')]]>
            </if>
            <if test="endDate != null and endDate != ''">
                <![CDATA[AND DATE_FORMAT(b.inboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test="1==1">
                AND b.checkStateId != 69
                AND b.boundType='WasteInbound'
            </if>
        </where>
        GROUP BY DATE_FORMAT(b.inboundDate, '%Y%m') ORDER BY b.inboundDate ASC;
    </select>

    <!--获取日期范围内的次生入库明细-->
    <select id="getSecondInboundOrderItemByRange" resultMap="InboundOrderItemRM">
        SELECT * FROM t_pl_inboundorderitem WHERE t_pl_inboundorderitem.inboundOrderId IN
        (SELECT inboundOrderId FROM t_pl_inboundorder
        <![CDATA[
            WHERE DATE_FORMAT(t_pl_inboundorder.inboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d')
            AND DATE_FORMAT(t_pl_inboundorder.inboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d')
            AND t_pl_inboundorder.boundType='SecondaryInbound'
            ]]>);
    </select>

    <!--根据日期范围查询次生入库明细数据:统计图表-->
    <select id="getSecondInboundOrderItemAmountByRange" resultMap="InboundOrderItemRM">
        select SUM(a.wastesAmount) as wastesAmount,b.inboundDate from t_pl_inboundorderitem as a left join t_pl_inboundorder as b
        on a.inboundOrderId=b.inboundOrderId
        <where>
            <if test="startDate != null and startDate != ''">
                <![CDATA[AND DATE_FORMAT(b.inboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d')]]>
            </if>
            <if test="endDate != null and endDate != ''">
                <![CDATA[AND DATE_FORMAT(b.inboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test="1==1">
                AND b.checkStateId != 69
                AND b.boundType='SecondaryInbound'
            </if>
        </where>
        GROUP BY DATE_FORMAT(b.inboundDate, '%Y%m') ORDER BY b.inboundDate ASC;
    </select>

    <!--增加次生入库单-->
    <insert id="addSecondInboundOrder" parameterType="InboundOrder">
        INSERT INTO t_pl_inboundorder
        (inboundOrderId, inboundDate, warehouseId, boundType, keeperId, directorId, approverId, checkState, remarks, creatorId,
        createDate, departmentId, companyId, modifierId,modifyDate, recordState, category,checkStateId,recordStateId)
        VALUES
        (#{inboundOrderId}, #{inboundDate}, #{wareHouse.wareHouseId}, #{boundType},#{keeperId}, #{directorId}, #{approverId},
        #{checkState}, #{remarks},#{creatorId}, #{createDate}, #{departmentId}, #{companyId}, #{modifierId}, #{modifyDate}, #{recordState}, 1,75,20);
        <if test="inboundOrderItemList.size() > 0">
            <foreach collection="inboundOrderItemList" item="inboundOrderItem" index="index">
                INSERT INTO t_pl_inboundorderitem
                (inboundOrderItemId, transferDraftId, inboundOrderId,
                produceCompanyId, processWay, handleCategory,remarks, warehouseArea, recordState, isQualified,
                wastesName, wastesCode, wastesCategory, wastesAmount,unitPriceTax, totalPrice, laboratoryTestId,
                category, formType, packageType, wastesUnit, laborityTestHeat, laborityTestWater,processWayId,
                handleCategoryId,formTypeId,packageTypeId,unitId,secondaryCategoryId,wareHouseId)
                VALUES
                (#{inboundOrderItem.inboundOrderItemId}, #{inboundOrderItem.transferDraftId},#{inboundOrderId},
                #{inboundOrderItem.produceCompany.clientId}, #{inboundOrderItem.processWay},
                #{inboundOrderItem.handleCategory}, #{inboundOrderItem.remarks},
                #{inboundOrderItem.warehouseArea}, #{inboundOrderItem.recordState}, #{inboundOrderItem.isQualified},
                #{inboundOrderItem.wastes.name},#{inboundOrderItem.wastes.wastesId}, #{inboundOrderItem.wastes.category},
                #{inboundOrderItem.wastesAmount}, #{inboundOrderItem.unitPriceTax},#{inboundOrderItem.totalPrice},
                #{inboundOrderItem.laboratoryTest.laboratoryTestNumber}, 1, #{inboundOrderItem.formType}, #{inboundOrderItem.packageType},
                #{inboundOrderItem.wastesUnit}, #{inboundOrderItem.laboratoryTest.heatAverage},
                #{inboundOrderItem.laboratoryTest.waterContentAverage},#{inboundOrderItem.processWayItem.dataDictionaryItemId},
                #{inboundOrderItem.handleCategoryItem.dataDictionaryItemId},#{inboundOrderItem.formTypeItem.dataDictionaryItemId},
                #{inboundOrderItem.packageTypeItem.dataDictionaryItemId},#{inboundOrderItem.unitDataItem.dataDictionaryItemId},
                #{inboundOrderItem.secondaryCategoryItem.dataDictionaryItemId},#{inboundOrderItem.wareHouse.wareHouseId});

                INSERT INTO t_pr_laboratorytest
                (laboratorytestnumber, clientId, wastesName, wastesCode, heatAverage, phAverage, ashAverage, waterContentAverage,
                chlorineContentAverage,sulfurContentAverage, phosphorusContentAverage, fluorineContentAverage,samplingDate)
                VALUES
                (#{inboundOrderItem.laboratoryTest.laboratoryTestNumber},#{inboundOrderItem.laboratoryTest.client.clientId},
                #{inboundOrderItem.laboratoryTest.wastesName}, #{inboundOrderItem.laboratoryTest.wastesCode},
                #{inboundOrderItem.laboratoryTest.heatAverage}, #{inboundOrderItem.laboratoryTest.phAverage}, #{inboundOrderItem.laboratoryTest.ashAverage},
                #{inboundOrderItem.laboratoryTest.waterContentAverage}, #{inboundOrderItem.laboratoryTest.chlorineContentAverage},
                #{inboundOrderItem.laboratoryTest.sulfurContentAverage}, #{inboundOrderItem.laboratoryTest.phosphorusContentAverage},
                #{inboundOrderItem.laboratoryTest.fluorineContentAverage},NOW());

                insert  into t_pl_wasteinventory
                (inboundOrderId,actualCount,unitPriceTax,wastesName,wareHouseId,clientId,wastesCode,inboundDate,processWay,handleCategory,creatorDate,boundType,transferDraftId,inboundOrderItemId,laboratoryTestId,processWayId,handleCategoryId,formTypeId,packageTypeId,unitId,secondaryCategoryId)
                values
                (#{inboundOrderId},#{inboundOrderItem.wastesAmount},#{inboundOrderItem.unitPriceTax},#{inboundOrderItem.wastes.name},#{inboundOrderItem.wareHouse.wareHouseId}, #{inboundOrderItem.produceCompany.clientId},#{inboundOrderItem.wastes.wastesId},#{inboundDate}
                ,#{inboundOrderItem.processWay}, #{inboundOrderItem.handleCategory},#{createDate},#{boundType},#{inboundOrderItem.transferDraftId},#{inboundOrderItem.inboundOrderItemId},#{inboundOrderItem.laboratoryTest.laboratoryTestNumber},#{inboundOrderItem.processWayItem.dataDictionaryItemId},#{inboundOrderItem.handleCategoryItem.dataDictionaryItemId},#{inboundOrderItem.formTypeItem.dataDictionaryItemId},#{inboundOrderItem.packageTypeItem.dataDictionaryItemId},#{inboundOrderItem.unitDataItem.dataDictionaryItemId},#{inboundOrderItem.secondaryCategoryItem.dataDictionaryItemId});

                insert into t_pl_secondaryinto
                (clientId,wastesCode,handleCategory,processWay,remarks,nowTime,transferDraftId,wastesCategory,laboratoryTestId)
                values
                (#{inboundOrderItem.produceCompany.clientId},#{inboundOrderItem.wastes.wastesId},
                #{inboundOrderItem.handleCategory},#{inboundOrderItem.processWay},#{inboundOrderItem.remarks},NOW(),
                #{inboundOrderItem.transferDraftId},#{inboundOrderItem.wastes.category},
                #{inboundOrderItem.laboratoryTest.laboratoryTestNumber});
            </foreach>
        </if>
    </insert>
    <!--更新次生入库单-->
    <update id="updateSecondInboundOrder" parameterType="InboundOrder">
        <if test="inboundOrderItemList != null and inboundOrderItemList.size() > 0">
            <foreach collection="inboundOrderItemList" item="inboundOrderItem">
                update t_pl_inboundorderitem set wastesName=#{inboundOrderItem.wastes.name},
                wastesCode=#{inboundOrderItem.wastes.wastesId}, wastesAmount=#{inboundOrderItem.wastesAmount},
                wastesUnit=#{inboundOrderItem.wastesUnit}, unitPriceTax=#{inboundOrderItem.unitPriceTax}, totalPrice=#{inboundOrderItem.totalPrice},
                processWay=#{inboundOrderItem.processWay}, formType=#{inboundOrderItem.formType}, packageType=#{inboundOrderItem.packageType},
                laborityTestHeat=#{inboundOrderItem.laboratoryTest.heatAverage}, laborityTestWater=#{inboundOrderItem.laboratoryTest.waterContentAverage},
                remarks=#{inboundOrderItem.remarks}, warehouseArea=#{inboundOrderItem.warehouseArea},
                secondaryCategoryId=#{inboundOrderItem.secondaryCategoryItem.dataDictionaryItemId},
                packageTypeId=#{inboundOrderItem.packageTypeItem.dataDictionaryItemId},
                formTypeId=#{inboundOrderItem.formTypeItem.dataDictionaryItemId},
                unitId=#{inboundOrderItem.unitDataItem.dataDictionaryItemId},
                processWayId=#{inboundOrderItem.processWayItem.dataDictionaryItemId} where inboundOrderItemId=#{inboundOrderItem.inboundOrderItemId};
            </foreach>
        </if>

    </update>

    <!--列出入库单-->
    <select id="listInboundOrder" resultMap="InboundOrderRM">
        SELECT * FROM t_pl_inboundorder
        WHERE boundType='WasteInbound'and checkState != 'Invalid'
        order by  nowTime desc
        <if test="start != null and count != null and count != 0">
            limit #{start}, #{count}
        </if>
    </select>

    <!--获取查询入库单的数量-->
    <select id="searchInboundOrderCount" resultType="int">
        select count(*) from t_pl_inboundorder
        <where>
            <if test="keyword != null and keyword != ''">
                and (inboundOrderId like "%"#{keyword}"%"
                or recordState=#{keyword}
                or checkState=#{keyword}
                or remarks like "%"#{keyword}"%"
                or inboundOrderId in
                (select inboundOrderId from t_pl_inboundorderitem where produceCompanyId in
                (select clientId from client where companyName like "%"#{keyword}"%"))
                or warehouseId in (select warehouseId from t_pl_warehouse where warehouseName like "%"#{keyword}"%"))
            </if>
            <if test="inboundOrderId != null and inboundOrderId != ''">
                and inboundOrderId LIKE "%"#{inboundOrderId}"%"
            </if>
            <if test="companyId != null and companyId != ''">
                <![CDATA[ and DATE_FORMAT(inboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{companyId}, '%Y-%m-%d') ]]>
            </if>
            <if test="modifierId != null and modifierId != ''">
                <![CDATA[ and DATE_FORMAT(inboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{modifierId}, '%Y-%m-%d') ]]>
            </if>
            <if test="true">
                and boundType=#{boundType}
            </if>
            <if test="recordState != null and recordState != ''">
                and recordState = #{recordState}
            </if>
            <if test="checkState != null and checkState != ''">
                and checkState = #{checkState}
            </if>
            <if test="wareHouse != null and wareHouse.wareHouseName != null and wareHouse.wareHouseName != ''">
                and warehouseId in (select warehouseId from t_pl_warehouse where warehouseName like "%"#{wareHouse.wareHouseName}"%")
            </if>
        </where>
    </select>

    <!--查询入库单-->
    <select id="searchInboundOrder" resultMap="InboundOrderRM">
        select * from t_pl_inboundorder
        <where>
            <if test="keyword != null and keyword != ''">
                and (inboundOrderId like "%"#{keyword}"%"
                or recordState=#{keyword}
                or checkState=#{keyword}
                or remarks like "%"#{keyword}"%"
                or inboundOrderId in
                (select inboundOrderId from t_pl_inboundorderitem where produceCompanyId in
                (select clientId from client where companyName like "%"#{keyword}"%"))
                or warehouseId in (select warehouseId from t_pl_warehouse where warehouseName like "%"#{keyword}"%"))
            </if>
            <if test="inboundOrderId != null and inboundOrderId != ''">
                and inboundOrderId LIKE "%"#{inboundOrderId}"%"
            </if>
            <if test="companyId != null and companyId != ''">
                <![CDATA[ and DATE_FORMAT(inboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{companyId}, '%Y-%m-%d') ]]>
            </if>
            <if test="modifierId != null and modifierId != ''">
                <![CDATA[ and DATE_FORMAT(inboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{modifierId}, '%Y-%m-%d') ]]>
            </if>
            <if test="true">
                and boundType=#{boundType}
            </if>
            <if test="recordState != null and recordState != ''">
                and recordState = #{recordState}
            </if>
            <if test="checkState != null and checkState != ''">
                and checkState = #{checkState}
            </if>
            <if test="wareHouse != null and wareHouse.wareHouseName != null and wareHouse.wareHouseName != ''">
                and warehouseId in (select warehouseId from t_pl_warehouse where warehouseName like "%"#{wareHouse.wareHouseName}"%")
            </if>
        </where>
        order by nowTime desc
        <if test="page != null and page.start != null and page.count != null and page.count != 0">
            limit #{page.start}, #{page.count};
        </if>
    </select>

    <!--列出次生入库单-->
    <select id="listSecondInboundOrder" resultMap="InboundOrderRM">
        SELECT * FROM t_pl_inboundorder
        <where>
            <if test="keyword != null and keyword != ''">
                and (inboundOrderId like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y-%m-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y-%c-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y-%c-%e') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y%m%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y%c%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y%c%e') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y.%m.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y.%c.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y.%c.%e') like "%"#{keyword}"%"
                or warehouseId in (select warehouseId from t_pl_warehouse where warehouseName like "%"#{keyword}"%")
                or recordState=#{keyword}
                or checkState=#{keyword})
                or remarks like "%"#{keyword}"%"
            </if>
            <if test="inboundOrderId != null and inboundOrderId != ''">
                and inboundOrderId like "%"#{inboundOrderId}"%"
            </if>
            <if test="wareHouse != null and wareHouse.wareHouseName != null">
                and warehouseId in (select warehouseId from t_pl_warehouse where warehouseName like "%"#{wareHouse.wareHouseName}"%")
            </if>
            <if test="recordState != null and recordState != ''">
                and recordState = #{recordState}
            </if>
            <if test="checkState != null and checkState != ''">
                and checkState = #{checkState}
            </if>
            <if test="companyId != null and companyId != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                <![CDATA[
                and (DATE_FORMAT(inboundDate,'%Y-%m-%d') >= #{companyId})
                ]]>
            </if>
            <if test="modifierId != null and modifierId != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                <![CDATA[
                and (DATE_FORMAT(inboundDate,'%Y-%m-%d') <= #{modifierId})
                ]]>
            </if>
            <if test="true">
                and boundType='SecondaryInbound' and checkStateId != 69
            </if>
        </where>
        order by createDate desc
        <if test="page != null and page.start != null and page.count != null and page.count != 0">
            limit #{page.start}, #{page.count}
        </if>

    </select>

    <!--获取次生入库单的数量-->
    <select id="countSecondInboundOrder" resultType="int">
        SELECT COUNT(*) FROM t_pl_inboundorder
        <where>
            <if test="keyword != null and keyword != ''">
                and (inboundOrderId like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y-%m-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y-%c-%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y-%c-%e') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y%m%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y%c%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y%c%e') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y.%m.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y.%c.%d') like "%"#{keyword}"%"
                or DATE_FORMAT(inboundDate,'%Y.%c.%e') like "%"#{keyword}"%"
                or warehouseId in (select warehouseId from t_pl_warehouse where warehouseName like "%"#{keyword}"%")
                or recordState=#{keyword}
                or checkState=#{keyword})
                or remarks like "%"#{keyword}"%"
            </if>
            <if test="inboundOrderId != null and inboundOrderId != ''">
                and inboundOrderId like "%"#{inboundOrderId}"%"
            </if>
            <if test="wareHouse != null and wareHouse.wareHouseName != null">
                and warehouseId in (select warehouseId from t_pl_warehouse where warehouseName like "%"#{wareHouse.wareHouseName}"%")
            </if>
            <if test="recordState != null and recordState != ''">
                and recordState = #{recordState}
            </if>
            <if test="checkState != null and checkState != ''">
                and checkState = #{checkState}
            </if>
            <if test="companyId != null and companyId != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                <![CDATA[
                and (DATE_FORMAT(inboundDate,'%Y-%m-%d') >= #{companyId})
                ]]>
            </if>
            <if test="modifierId != null and modifierId != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                <![CDATA[
                and (DATE_FORMAT(inboundDate,'%Y-%m-%d') <= #{modifierId})
                ]]>
            </if>
            <if test="true">
                and boundType='SecondaryInbound'
            </if>
        </where>
    </select>

    <!--通过编号获取入库单-->
    <select id="getInboundOrderById" resultMap="InboundOrderRM">
        SELECT * FROM t_pl_inboundorder WHERE inboundOrderId=#{inboundOrderId};
    </select>

    <!--作废该入库单-->
    <update id="setInboundOrderStateInvalid" parameterType="String">
        UPDATE t_pl_inboundorder SET checkState='Invalid', checkStateId=69 WHERE inboundOrderId=#{inboundOrderId};
    </update>

    <!--提交该入库单-->
    <update id="setInboundOrderStateSubmit" parameterType="String">
        UPDATE t_pl_inboundorder SET checkState='ToExamine', checkStateId=63 WHERE inboundOrderId=#{inboundOrderId};
    </update>

    <!--审批-->
    <update id="setInboundOrderStateApproval" parameterType="String">
        UPDATE t_pl_inboundorder SET  checkStateId=76 WHERE inboundOrderId=#{inboundOrderId};
    </update>

    <!--驳回-->
    <update id="setInboundOrderStateBack" parameterType="String">
        UPDATE t_pl_inboundorder SET  checkStateId=66 WHERE inboundOrderId=#{inboundOrderId};
    </update>

    <!--获取入库单明细列表-->
    <select id="getInboundOrderItemList" resultMap="InboundOrderItemRM">
        SELECT * FROM t_pl_inboundorderitem WHERE inboundOrderId=#{inboundOrderId};
    </select>

    <!--判断是否存在该入库单号-->
    <select id="existInboundOrderId" resultType="boolean">
        SELECT COUNT(*) FROM t_pl_inboundorder WHERE inboundOrderId=#{inboundOrderId};
    </select>

    <!--更新入库计划单条目-->
    <update id="updateInboundOrderItem">
        UPDATE t_pl_inboundorderitem SET transferDraftId=#{transferDraftId},
        produceCompanyId=#{produceCompany.clientId}, wastesName=#{wastes.name},
        wastesCode=#{wastes.wastesId}, wastesAmount=#{wastesAmount},
        processWayId=#{processWayItem.dataDictionaryItemId},
        handleCategoryId=#{handleCategoryItem.dataDictionaryItemId},
        remarks=#{remarks}, warehouseArea=#{warehouseArea}
        WHERE inboundOrderItemId=#{inboundOrderItemId};
    </update>

    <update id="updateItemHandleCategory" parameterType="InboundOrderItem">
        UPDATE t_pl_inboundorderitem SET handleCategory=#{handleCategory} WHERE inboundOrderItemId=#{inboundOrderItemId};
    </update>

    <select id="countInboundOrder" resultType="int">
        SELECT COUNT(*) FROM t_pl_inboundorder WHERE boundType='WasteInbound';
    </select>

    <select id="getInboundOrderItemByClientId" parameterType="String" resultMap="InboundOrderItemRM">
        select t_pl_inboundorderitem.*,t_pl_inboundorder.inboundDate from t_pl_inboundorderitem join t_pl_inboundorder
        where
        t_pl_inboundorderitem.produceCompanyId =#{id} and t_pl_inboundorderitem.inboundOrderId=t_pl_inboundorder.inboundOrderId;
    </select>
    
    <select id="getInventoryByWastesNameAndWareHouse" resultType="int">
        select count(*) from t_pl_wasteinventory where wastesName=#{wastesName} and warseHouseId in (select warseHouseId from t_pl_warehouse where warehouseName =#{wareHouseName});
    </select>

    <!--更新入库计划单的图片路径-->
    <update id="updateInboundPlanOrderImgUrl">
        update t_pl_inboundplanorder set imgUrl=#{1} where inboundPlanOrderId=#{0};
    </update>
</mapper>